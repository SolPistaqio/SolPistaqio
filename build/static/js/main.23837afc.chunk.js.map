{"version":3,"sources":["components/Infograph/infograph.js","components/Story/story.js","components/Test/Mailchimp.js","components/Test/signups.js","components/Test/test.js","components/Nav/nav.js","components/Parks and weather/parks.js","components/Parks and weather/apisearch.js","components/game/spinat.js","components/game/grid.js","components/game/game.js","App.js","serviceWorker.js","index.js"],"names":["Infograph","props","state","days","crypto","currency","handleClick","bind","handleDayChange","e","this","search","newValue","target","value","category","name","setState","choseCrypto","map","labelKey","key","onClick","type","id","defaultChecked","for","choseDays","step","min","max","choseCurrency","data","labels","datasets","label","show","className","options","title","display","text","fontSize","legend","position","Component","Coolchart","handleSearch","numberNeeded","fetch","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","Object","keys","reverse","slice","values","parseFloat","getStockdata","React","Mailchimp","evt","preventDefault","fields","action","field","encodeURIComponent","join","pet","url","replace","email","test","sendData","status","end","jsonp","param","err","msg","includes","result","styles","buttonClassName","messages","defaultProps","onSubmit","handleSubmit","input","onChange","defaultValue","disabled","button","style","sendingMsg","sending","successMsg","success","duplicateMsg","duplicate","errorMsg","empty","error","color","Dogs","placeholder","required","questions","idAndValue","RenderQuestionOption","handleChange","handleContactChange","changeQuestion","variable","changeContacts","option","question","RenderOptions","RenderQuestion","number","fur","Ending","src","Test","submitted","endForm","submit","RenderWalk","city","venues","forecast","searched","pic","handleData","handleEnter","searchCity","groups","items","item","venue","filter","categories","getVenues","vResult","undefined","alert","length","onKeyPress","setForecast","RenderPark","park","href","location","lat","lng","rel","RenderWeather","UNIX_timestamp","a","Date","getHours","getMinutes","weather","coord","icon","main","Math","floor","temp","timeConverter","sys","sunset","RenderVenue","s","venueID","photos","count","prefix","suffix","pResult","weatherUrl","Spoink","affection","bad","good","getRandomRange","itemsNeeded","range","randomNumber","random","indexOf","push","FoodItem","handleFoodChoise","foodChoise","foodItem","role","locations","food","String","fromCodePoint","Gamefield","handleRestart","level","badN","getNumberOfBad","forEach","index","fType","restart","itemsQ","neededItems","getItemsNeeded","getfood","getLocation","abs","Game","restartGame","newLevel","newAffection","content","info","desc","App","active","appToShow","giveDesc","hideDesc","showApp","hideApp","onMouseLeave","onMouseOver","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23837afc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Line} from 'react-chartjs-2';\nimport './infograph.css'\n//import { defaults } from 'react-chartjs-2';\n//import { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\n\nconst numberNeeded = 20;\n\n\n\nfunction getStockdata(crypto ,currency, numberNeeded) {\n    const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol='+crypto+'&market='+currency+'&apikey=' + apiKey\n    return fetch(url).then(response => {\n        if (response.ok) {\n          return response.json()\n        } \n          throw new Error('Request failed!');\n        \n      }, networkError => {\n        console.log(networkError.message)\n      }).then(jsonResponse=>{\n       //console.log(jsonResponse);\n         \n        const data = \n        {labels: Object.keys(jsonResponse['Time Series (Digital Currency Daily)'])\n        .reverse()\n        .slice(-numberNeeded),\n        label: jsonResponse['Meta Data']['3. Digital Currency Name'],\n        data: Object.values(jsonResponse['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+jsonResponse['Meta Data']['4. Market Code']+')']}).\n        reverse().\n        slice(-numberNeeded).map(\n                value => {return parseFloat(value)}),\n        text : jsonResponse['Meta Data']['5. Market Name']+'/'+jsonResponse['Meta Data']['3. Digital Currency Name'],\n        }\n        return data\n        \n      })};\n\n\nclass Infograph extends Component {\nconstructor (props) {\n    super(props);\n    this.state = {\n        days:50,\n        crypto: 'ETH',\n        currency: 'EUR'\n    }\n    \nthis.handleClick=this.handleClick.bind(this);\nthis.handleDayChange=this.handleDayChange.bind(this)\n\n}\n\nhandleClick(e){\n    this.props.search(this.state.crypto,this.state.currency, this.state.days)\n}\n\nhandleDayChange(e){\n    //console.log(e.target.name);\n    const newValue = e.target.value;\n    const category = e.target.name;\n    if (category === 'days'){\n    this.setState({\n        days:newValue\n    })} else if (category === 'crypto'){\n        this.setState({\n            crypto:newValue\n        })\n    } else if (category === 'currency'){\n        this.setState({\n            currency:newValue\n        })\n    }\n}\n\n\nrender() {\n\n  const crypto = ['ETH', 'BTC', 'TRX',  'BNB', 'XRP', 'BCH', 'LTC', 'NEO'];\n  const currency = ['EUR', 'USD', 'RUB', 'CNY'];\n\n  const choseCrypto = \n  <div>\n      {crypto.map(crypto => {\n       const labelKey = 'l' + {currency};\n        if(crypto === this.state.crypto){\n       return (<span>\n       <input key={crypto} onClick={this.handleDayChange} type=\"radio\" id={crypto} name=\"crypto\" value={crypto} defaultChecked></input>\n       <label key={labelKey} for={crypto}>{crypto}</label>\n       </span>\n       )} else { return (<span>\n        <input key={crypto} onClick={this.handleDayChange} type=\"radio\" id={crypto} name=\"crypto\" value={crypto}></input>\n        <label key={labelKey} for={crypto}>{crypto}</label>\n        </span>\n        )\n       } \n      })}\n  </div>;\n\n  const choseDays = <div>\n   <p>3 <input onClick={this.handleDayChange} type=\"range\" id=\"days\" name=\"days\" step=\"1\" min=\"3\" max=\"100\"></input>100 </p>\n    <label for=\"days\">Show for {this.state.days} days</label>\n \n  </div>;\n\nconst choseCurrency =\n<div>\n{currency.map(currency => {\n      const  labelKey = 'l' + {currency};\n        if(currency === this.state.currency){\n       return (<span>\n       <input key={currency} onClick={this.handleDayChange} type=\"radio\" id={currency} name=\"currency\" value={currency} defaultChecked></input>\n       <label key={labelKey} for={currency}>{currency}</label>\n       </span>\n       )} else { return (<span>\n        <input key={currency} onClick={this.handleDayChange} type=\"radio\" id={currency} name=\"currency\" value={currency}></input>\n       <label key={labelKey} for={currency}>{currency}</label>\n        </span>\n        )\n       } \n      })}\n\n  </div>;\n\n  const data = {\n    labels:  this.props.data.labels,\n    datasets: [{\n        label: this.props.data.label, \n        data: this.props.data.data,\n    } ]\n}\n  if (this.props.show) { \n  return (\n        <div className=\"chart child\">\n        <h1 >Crypto vs Fiat per day chart</h1>\n            <Line \n                data= {data}\n            \n                options = {{\n                    title: {\n                        display: true,\n                        text: this.props.data.text,\n                        fontSize: 25\n                    },\n                    legend: {\n                       display: false,\n                       position: 'left'\n                    }\n                }}\n            \n            \n            />\n            <p>Choose currencies and time period you want to see</p>\n            <div className = \"options\">\n            {choseDays}\n            {choseCrypto}\n            {choseCurrency}\n            </div>\n            <button onClick={this.handleClick}>Get data</button>\n        </div>)}\n    else {return (<div className=\"chart child\">\n        <h1 >Crypto vs Fiat per day chart</h1>\n        <p>Choose currencies and time period you want to see</p>\n        <div className = \"options\">\n        {choseDays}\n        {choseCrypto}\n        {choseCurrency}\n        </div>\n    <button onClick={this.handleClick}>Get data</button>\n    </div>\n    )}\n}\n};\n\nclass Coolchart extends React.Component{\n    constructor (props) {\n        super(props);\n        this.state = {\n            data: {},\n            display: false\n        }\n    this.handleSearch = this.handleSearch.bind(this)\n    }\n    handleSearch(crypto ,currency, numberNeeded){\n      return getStockdata(crypto ,currency,numberNeeded).then(response => this.setState({\n           data: response,\n           display: true\n       }))\n    }\n    render() {\n    //console.log(this.state.data);\n      return ( <div>\n      <Infograph show={this.state.display} data={this.state.data} search={this.handleSearch}/>\n      </div>\n      )\n    }\n}\nexport default Coolchart;","import React from 'react';\nimport './story.css';\n\n\nclass MyBio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lePic: './expectation.png',\n      clicked: false\n  };\n    this.changePhoto = this.changePhoto.bind(this);\n    this.changePhotoBack = this.changePhotoBack.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  changePhoto = () => {\n    if (this.state.clicked === false) {this.setState({lePic: './me.jpg'});}\n  }\n\n  changePhotoBack = () => {\n    if (this.state.clicked === false) {this.setState({lePic: './expectation.png'});}\n  }\n\n  handleClick = () => {\n    this.setState({lePic: './me.jpg', clicked: true});\n  }\n\n  render() {\n    let lePic = this.state.lePic;\n    const Title = 'Hire good programmer in Riga';\n    return  (\n    <div className=\"white\">\n    <div className=\"container\"><div className=\"story\">\n    <h2>Hi! My name's Sol and I'm your dream programmer</h2>\n    <p>Even if you don't dream about awesome programmers at night you probably want someone who:</p>\n    <ul>\n        <li>Can help you with your frontend needs (JS, REACT, CSS, HTML)</li>\n        <li>Will help you integrate with whatever</li>\n        <li>Understands SEO and Marketing</li>\n        <li>Is super easy to deal with. No nerd-speak. Unless you want to ;)</li>\n    </ul>\n    <p>I'm not a designer. I can't design to save my life. But if you want to see how I handle css press the button below at your own risk</p>\n    <button>Turn on the DESIGN O_O</button>\n    </div>\n    <div className=\"pic\">\n        <img  className=\"pic\" onClickCapture = {this.handleClick} onMouseEnter={this.changePhoto} onMouseLeave = {this.changePhotoBack} \n     src = {lePic}\n     alt = {Title}\n    />\n    </div>\n   </div>\n   </div>);\n  }\n};\n\n\n  \n\nexport default MyBio;\n","\nimport React from \"react\"\nimport jsonp from \"jsonp\"\nimport PropTypes from 'prop-types';\n\nclass Mailchimp extends React.Component {\n  state = {};\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const { fields, action } = this.props;\n    let values = fields.map(field => {\n      return `${field.name}=${encodeURIComponent(this.state[field.name])}`;\n    }).join(\"&\");\n    values = values +'&PET='+ this.props.pet;\n    console.log(values);\n    const path = `${action}&${values}`;\n    const url = path.replace('/post?', '/post-json?');\n    const regex = /^([\\w_\\.\\-\\+])+\\@([\\w\\-]+\\.)+([\\w]{2,10})+$/;\n    const email = this.state['EMAIL'];\n    (!regex.test(email)) ? this.setState({ status: \"empty\" }) : this.sendData(url);\n    this.props.end()\n  };\n\n  sendData(url) {\n    this.setState({ status: \"sending\" });\n    jsonp(url, { param: \"c\" }, (err, data) => {\n      if (data.msg.includes(\"already subscribed\")) {\n        this.setState({ status: 'duplicate' });\n      } else if (err) {\n        this.setState({ status: 'error' });\n      } else if (data.result !== 'success') {\n        this.setState({ status: 'error' });\n      } else {\n        this.setState({ status: 'success' });\n      };\n    });\n  }\n\n  render() {\n    const { fields, styles, className, buttonClassName } = this.props;\n    const messages = {\n      ...Mailchimp.defaultProps.messages,\n      ...this.props.messages\n    }\n    const { status } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)} className={className}>\n        {fields.map(input =>\n          <input\n            {...input}\n            key={input.name}\n            onChange={({ target }) => this.setState({ [input.name]: target.value })}\n            defaultValue={this.state[input.name]}\n          />\n        )}\n        <button\n          disabled={status === \"sending\" || status === \"success\"}\n          type=\"submit\"\n          className={buttonClassName}\n        >\n          {messages.button}\n        </button>\n        <div className='msg-alert'>\n          {status === \"sending\" && <p style={styles.sendingMsg}>{messages.sending}</p>}\n          {status === \"success\" && <p style={styles.successMsg}>{messages.success}</p>}\n          {status === \"duplicate\" && <p style={styles.duplicateMsg}>{messages.duplicate}</p>}\n          {status === \"empty\" && <p style={styles.errorMsg}>{messages.empty}</p>}\n          {status === \"error\" && <p style={styles.errorMsg}>{messages.error}</p>}\n        </div>\n      </form>\n    );\n  }\n}\n\nMailchimp.defaultProps = {\n  messages: {\n    sending: \"Sending...\",\n    success: \"Thank you for subscribing!\",\n    error: \"An unexpected internal error has occurred.\",\n    empty: \"You must write an e-mail.\",\n    duplicate: \"Too many subscribe attempts for this email address\",\n    button: \"Subscribe!\"\n  },\n  buttonClassName: \"\",\n  styles: {\n    sendingMsg: {\n      color: \"#0652DD\"\n    },\n    successMsg: {\n      color: \"#009432\"\n    },\n    duplicateMsg: {\n      color: \"#EE5A24\"\n    },\n    errorMsg: {\n      color: \"#ED4C67\"\n    }\n  }\n};\n\nMailchimp.propTypes = {\n  action: PropTypes.string,\n  messages: PropTypes.object,\n  fields: PropTypes.array,\n  styles: PropTypes.object,\n  className: PropTypes.string,\n  buttonClassName: PropTypes.string\n};\n\nexport default Mailchimp;\n","import React from 'react';\n//import Mailchimp from 'react-mailchimp-form';\nimport Mailchimp from './Mailchimp'\n\nclass Dogs extends React.Component {\n    \n    render() {\n        const pet = this.props.pet;\n      return (\n          <Mailchimp\n          end = {this.props.end}\n          pet = {pet}\n          action='https://rocks.us15.list-manage.com/subscribe/post?u=645c4a5124c0e6aae7ac2b2f6&amp;id=f78bc0d515'\n          fields={[\n            {\n              name: 'EMAIL',\n              placeholder: 'Email',\n              type: 'email',\n              required: true\n            },\n            {\n                name: 'FNAME',\n                placeholder: 'Name',\n                type: 'text',\n                required: true\n              },\n            /*{\n                name: 'PET',\n                placeholder: 'Pet',\n                type: 'text',\n                required: true\n            }*/\n              ]}\n              messages = {\n                {\n                  button: 'Let '+pet+'s know!',\n                  success: 'Check your email (possibly spam) for important message from '+pet+'s'\n                }}\n          />\n      );\n    }\n  }\n\n\nexport default Dogs;","import React from 'react';\nimport Dogs from './signups.js';\nimport './test.css'\n\nlet other = [{\n    title: 'What is your name?',\n    display: false,\n    type: 'text',\n    name: 'name',\n    id: 4,\n    options: [{\n    idAndValue: 'name',\n    label: \"Name\"\n    }]\n},\n{\n    title: 'What is your email?',\n    display: false,\n    type: 'text',\n    name: 'email',\n    id: 5,\n    options: [{\n    idAndValue: 'emal',\n    label: \"Email\"\n    }]\n }]\n\nlet questions = [\n    { title : 'Do you like warm and fuzzy pets?',\n     display: true,\n     type: \"radio\",\n     name: \"fuzzy\",\n     id: 1,\n     options: [{\n         idAndValue: 'yes',\n         label: \"Yes\"\n     }, {\n         idAndValue: 'no',\n         label: \"No\"\n     }]},\n     {title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 2,\n     options: [{\n         idAndValue: 'dog',\n         label: \"Dog\"\n     }, {\n         idAndValue: 'hamster',\n         label: \"Hamster\"\n     }, \n     {\n         idAndValue: 'cat',\n         label: \"Cat\"\n     }]},{\n     title : 'Okay. What kind of furless pets you like?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 3,\n     options: [{\n         idAndValue: 'pig',\n         label: \"Pig\"\n     }, {\n         idAndValue: 'lizard',\n         label: \"Lizard\"\n     }, \n     {\n         idAndValue: 'snake',\n         label: \"Snake\"\n     },\n     {\n        idAndValue: 'babie',\n        label: \"Baby\"\n    },\n    ]},\n    \n ];\n\n class RenderQuestionOption extends React.Component {\n    constructor(props) {\n        super(props);\nthis.handleChange=this.handleChange.bind(this);\nthis.handleContactChange = this.handleContactChange.bind(this); \n      }\n\n    handleChange(e) {\n       // console.log(e.target);\n        const value = e.target.value;\n       const field = e.target.name;\n      this.props.changeQuestion(field,value);\n      }\n\n    handleContactChange (e) {\n        console.log(e.target.value);\n        console.log(e.target.name);\n        const variable = e.target.name;\n        const value = e.target.value;\n        this.props.changeContacts(variable, value);\n    }\n     render (){\n         let option = this.props.option;\n         let question = this.props.question;\n         if (question.type !== 'text')\n       { return (<div>\n          <input key = {question.id} onClick = {this.handleChange} type={question.type} id={option.idAndValue} name={question.name} value={option.idAndValue}  />\n         <label for={option.idAndValue}>{option.label}</label> \n        </div>)} else {\n            return(<div>\n            <input required key = {question.id} onChange = {this.handleContactChange} type={question.type} id={option.idAndValue} name={question.name} \n            //value={option.idAndValue}  \n            />\n            <label for={option.idAndValue}>{option.label}</label> \n            </div>)\n        }\n     }\n };\n\n class RenderOptions extends React.Component {\n    render () {\n        return (<div> \n            {this.props.options.options.map(option => <RenderQuestionOption  changeQuestion = {this.props.changeQuestion} question = {this.props.options} option = {option}/>)}\n            </div>\n            )\n    \n    }\n };\n class RenderQuestion extends React.Component {\n    render (){\n        if (this.props.number.fur === \"Notspec\" && this.props.question.id === 1){\n            console.log(this.props.number);\n        return (<div>\n        <p>{this.props.question.title}</p>\n            <RenderOptions  changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n            </div>\n            )} else if (this.props.number.fur === \"yes\" && this.props.question.id === 2){\n                return <div>\n                <p>{this.props.question.title}</p>\n                    <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                    </div>\n            }\n         else if (this.props.number.fur === \"no\" && this.props.question.id === 3){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions  changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                \n                </div>\n        }  else if (this.props.number.pet !== \"Notspec\" && this.props.question.id >3 ){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions  changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n\n                </div>\n       \n\n        }  else {\n            return <div></div>\n        }\n        \n      }\n        \n};\n\nclass Ending extends React.Component{\n    render(){\n        let pet = '';\n        const lizard = './lizard.gif';\n        const pig = './pig.gif';\n        const snake = './snake.gif';\n        const baby = './baby.gif';\n        const dog = './puppy.gif';\n        const cat = './cat.gif';\n        const hamster = './hamster.gif';\n\n        const choice = this.props.pet;\n\n        switch (choice) {\n            case 'lizard':\n                pet = lizard;\n                break; \n            case 'pig':\n                pet = pig;\n                break; \n            case 'lizard':\n                pet = lizard;\n                break; \n            case 'snake':\n                pet = snake;\n                break; \n            case 'babie':\n                pet = baby;\n                break; \n            case 'dog':\n                pet = dog;\n                break;\n            case 'cat':\n                pet = cat;\n                break;\n            case 'hamster':\n                pet = hamster;\n                break;\n        }\n        const src = pet;\n\n        return (<div>\n            <p>Check your email (possibly spam) for important message from {this.props.pet}s</p>\n            <img src={src}/> \n            </div>)\n    }\n}\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fur: 'Notspec',\n          question: 1,\n          pet: \"Notspec\",\n          submitted: false\n      };\n        this.changeQuestion = this.changeQuestion.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.endForm = this.endForm.bind(this);\n      }\n      \n      changeQuestion(field, value) {\n        \n        if(field === \"fuzzy\") {\n        this.setState({fur: value});\n        \n        } else if (field === \"pet\") {\n       this.setState({pet: value});\n       \n      } else {\n      console.log(value);\n       };\n\n  };\n\n  handleSubmit(e){\n    e.preventDefault();\n    console.log(e.target);\n    console.log(this.state);\n    this.setState({\n        submitted: true \n    })\n  }\n\n  endForm(){\n    const newV = true\n    this.setState({\n        submitted: newV \n    })\n}\n\n\n    \n    render(){\n        let submit;\n        if (this.state.pet !== \"Notspec\"\n        ){\n            submit = <Dogs end ={this.endForm}pet = {this.state.pet}/>\n        }\n        else submit = <div></div>\n        if(this.state.submitted === false)\n        {return (<div className= 'form' >\n        <form onSubmit={this.handleSubmit}>\n            {questions.map(question =>  <RenderQuestion  changeQuestion = {this.changeQuestion} number = {this.state} question = {question}/>)}\n            <br/>\n        </form> \n        {submit}\n        </div>)}\n        else {\n            return (<div className= 'form' >\n            <Ending pet = {this.state.pet}/>\n            </div>)\n        }\n    }\n};\n\nexport default Test;","import React from 'react';\nimport './nav.css'\n\nclass NavBar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          class: 'big'\n      };\n        this.displayMenu = this.displayMenu.bind(this);\n        this.hideMenu = this.hideMenu.bind(this);\n        this.switchStyle = this.switchStyle.bind(this)\n      }\n\n    displayMenu() {\n        this.setState({\n            class: 'small'\n        })\n    }\n\n    hideMenu() {\n        this.setState({\n            class: 'big'\n        })\n    }\n\n    switchStyle(){\n        if(this.state.style === 'big'){\n            this.displayMenu()\n        } else {\n            this.hideMenu()\n        }\n    }\n\n\n    render(){\n        return (\n            <div className='navbar'>\n                <a href=\"#bio\"><h1 >Sol</h1></a>\n                <button onMouseEnter= {this.displayMenu} onClick={this.switchStyle}>Sol's Burger</button>\n                <ul className = {this.state.class} >\n                    <a href=\"#bio\" className='hide' ><li onClick = {this.hideMenu}>About Sol</li></a>\n                    <a href=\"#chart\"><li onClick = {this.hideMenu}>Cool graph I can do with API data</li></a>\n                    <a href=\"#test\"><li onClick = {this.hideMenu}>Test to email app</li></a>\n                    <a href=\"#walk\"><li onClick = {this.hideMenu}>Park app</li></a>\n                    <a href=\"#game\" ><li onClick = {this.hideMenu}>Awesome game about true love</li></a>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;","import React from 'react';\nimport {getVenues, getForecast, getPhotos} from './apisearch.js';\nimport './parks.css';\n\n\nclass RenderWalk extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            city : 'Riga',\n            venues : [],\n            forecast : {},\n            searched: false,\n            pic: ''\n      };\n      this.handleData=this.handleData.bind(this);\n      this.handleClick=this.handleClick.bind(this);\n      this.handleEnter=this.handleEnter.bind(this);\n      }\n      handleData(e){\n       // console.log(e.target.value);\n        const searchCity = e.target.value;\n        this.setState({\n            city: searchCity\n        });\n      }\n      \n\n      search(city){\n       // console.log('searching for ' + city);\n       \n        this.setState({\n            searched: false,\n            venues : [],\n              })\n        \n        getVenues(city).then(vResult => {\n            if (vResult !== undefined && vResult !== {}){\n       this.setState({\n           venues : vResult, \n           searched: true,\n             })}\n            else {\n                this.setState({\n                    venues : [],\n                      })\n                alert('Please try entering city again');\n            \n        }});\n        \n      }\n\n      setForecast(vResult){\n          this.setState(\n            {forecast : vResult}\n          )\n      }\n      \n      handleEnter(e){\n         const city = this.state.city\n         if (e.key === 'Enter') {\n            //console.log('search on Enter for '+ city);\n            this.search(this.state.city);\n          } \n      }\n      \n      handleClick(e){ \n        e.preventDefault();\n        this.search(this.state.city);\n           \n      }\n      \n    render(){\n        if(this.state.venues.length>0 && this.state.searched) {\n           // console.log(this.state.venues);\n            return (<div className='parkCont'> <div className='parks'>\n                <h2>Enter a city where you want to walk in</h2>\n                <input onChange={this.handleData} onKeyPress={this.handleEnter}/>\n            <button onClick={this.handleClick}>Search</button>\n            </div><div>\n                <RenderVenue setForecast={this.setForecast} venues={this.state.venues} forecast = {this.state.forecast}/>\n            </div>\n            </div>)\n        } else if (this.state.venues.length < 1 && this.state.searched) {\n                return (<div className='parkCont'> \n                <p>Sorry, there are no parks there</p>\n                <p>Please try again.</p>\n            <div className='parks'>\n             <h2>Enter a city where you want to walk in</h2>\n            <input onChange={this.handleData} onKeyPress={this.handleEnter}/>\n            <button onClick={this.handleClick}>Search</button>\n            </div>\n            </div>)\n            }\n        else {\n            return (<div className='parkCont'>\n            <div className='parks'>\n             <h2>Enter a city where you want to walk in</h2>\n            <input onChange={this.handleData} onKeyPress={this.handleEnter}/>\n            <button onClick={this.handleClick}>Search</button>\n            </div></div>)\n    }}\n\n};\n\nclass RenderPark extends React.Component {\n    render(){\n       // console.log('all parks incoming')\n        return (<div>\n            <ul>\n            {this.props.venues.map(park => {\n                const href = 'https://maps.google.com/?q=' +park.location.lat+ ','+ park.location.lng; \n                return <div key={park.name}> \n                    \n                <li > {park.name} <a href={href} target='_blank'rel=\"noopener noreferrer\">Directions-></a> </li>\n                </div>\n            })}\n        </ul>\n        </div>)\n    \n}}\n\nclass RenderWeather extends React.Component {\n    timeConverter(UNIX_timestamp){\n        const a = new Date(UNIX_timestamp * 1000);\n        const hour = a.getHours();\n        const min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes(); \n        const time = hour + ':' + min;\n        return time;\n      }\n    \n    render(){\n      //console.log(this.props.weather);\n        if(this.props.weather === {} || !this.props.weather.coord){\n            return <p>Weather report is not available for this city</p>\n        } else if (this.props.weather){\n            const src = 'https://openweathermap.org/img/wn/'+this.props.weather.weather[0].icon+'@2x.png';\n            return ( <div className='weather'>\n\n        <img src={src} />\n        <p>{this.props.weather.weather[0].main} {Math.floor(this.props.weather.main.temp- 273.15)}C</p>\n        <p>Sunset {this.timeConverter(this.props.weather.sys.sunset)} PM</p>\n        \n\n            </div>\n            )\n        }else{\n            return <p>Weather report is not available for this city</p>\n        }\n    }\n};\n\nclass RenderVenue extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            pic: '',\n            weather: {},\n            s: false\n      }\n    }\n\n      componentDidMount(){\n       // console.log('here comes the photo!')\n        getPhotos(this.props.venues[0].id).then(pResult =>\n            this.setState({\n                pic : pResult\n                  })); \n        \n      //  console.log('control forecast incoming')         \n        getForecast(this.props.venues[0].location.city).then(vResult => \n            this.setState({\n            weather: vResult,\n            s: true\n        }))\n        \n        \n      }\n        \nrender(){\n    //const src = 'https://openweathermap.org/img/wn/'+this.props.forecast.weather[0].icon+'@2x.png';\n    //const href = 'https://maps.google.com/?q=' +this.props.venues[0].location.lat+ ','+ this.props.venues[0].location.lng;\n    //const photo = this.props.venues[0].photo;\n    const city = this.props.venues[0].location.city;\n  // console.log(this.state.weather);\n   \n   if (this.state.s)\n    {return (<div className='parks'>\n    <div className='title'><h3 >{city} </h3></div>\n    <RenderWeather className='weather' weather={this.state.weather}\n   // weather={this.props.forecast}\n    />\n      <div className='parkinfo' >\n       \n        <img src={this.state.pic} />\n         \n       <RenderPark venues={this.props.venues}/>\n       \n        </div>\n    </div>)}\n    else {\n        return (<div className='parks'>\n    <div className='title'><h3 >{city} </h3></div>\n      <div className='parkinfo' >\n       <img src={this.state.pic} />\n       <RenderPark  venues={this.props.venues}/>\n        \n        </div>\n    </div>)\n    }\n}\n};\nexport default RenderWalk;\n","\n function getVenues(city) {\n  const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n  const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n  const url = 'https://api.foursquare.com/v2/venues/explore?near=';\n  //const city = $input.val();\n  const urlToFetch = url + city + '&limit=50&client_id='+ clientId + '&client_secret='+clientSecret+'&v=20200225';\n  return fetch(urlToFetch).then(response => {\n      if (response.ok) {return response.json()\n      } \n      //throw new Error('Request failed!');\n      return {}\n    }, networkError => {\n      console.log(networkError.message)\n    }).then(response=>{\n      //console.log(response);\n      if(response.response\n        //.groups[0]\n        ){\n          const venues = response.response.groups[0].items.map(item => item.venue);\n          const parks = venues.filter(venue => venue.categories[0].name ===\"Park\" || venue.categories[0].name ===\"Trail\" );\n      return parks}\n    })    \n      };\n  function getPhotos (venueID) {\n    const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n    const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n    const url = 'https://api.foursquare.com/v2/venues/'+venueID+'/photos';\n    const urlToFetch = url  + '?limit=1&client_id='+ clientId + '&client_secret='+clientSecret+'&v=20200225';\n    return fetch(urlToFetch).then(response => {\n      if (response.ok) {\n        return response.json()\n      } \n        throw new Error('Request failed!');\n      \n    }, networkError => {\n      console.log(networkError.message)\n    }).then(jsonResponse=>{\n      //console.log(jsonResponse);\n      return jsonResponse\n    }).then(jsonResponse=>{\n      if (jsonResponse.response.photos.count >0 ){\n      const photo = jsonResponse.response.photos.items[0].prefix + '300x500' + jsonResponse.response.photos.items[0].suffix;\n      //console.log(photo);\n      return photo}\n    else console.log('No photo found for venue N 1')\n  return ''})\n  }\n\n\n      \n      function getForecast (city){\n        const openWeatherKey = '24baa893cee78ee225eca9d32759df14';\n        const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather';\n        //const city = $input.val();\n        const urlToFetch = weatherUrl +'?q='+city+'&APPID='+openWeatherKey;\n      \n        return fetch(urlToFetch).then(response => {\n          if (response.ok) {\n            return response.json()\n          } \n          return {}\n          \n        }, networkError => {\n          console.log(networkError.message)\n        }).then(jsonResponse=>{\n         // console.log(jsonResponse);\n          return jsonResponse\n        })\n        \n       /* return fetch(urlToFetch).then(response => {\n          if(response.ok) {\n            return response\n          } return {}\n        }, networkError => {\n          console.log(networkError.message)\n        }).then(response => {\n          if(response.status === 200){\n            console.log(response);\n          return response.json()}\n          else {\n            return {}\n          }\n        })*/\n        \n      }\n\n\nexport {getForecast, getVenues, getPhotos}\n","import React from 'react';\nimport './game.css'\n\nconst img = ['./0png']\nclass Spoink extends React.Component{\n\n    \n    render(){\n        const affection = this.props.affection;\n        if (affection>=-3 && affection<=3){\n        const src = './'+affection+'.png'\n\n        //const src = img[0]\n        return (<div>\n        <img src={src}/>\n        </div>)}\n        else {\n            return {}\n        }\n    }\n}\n\nexport default Spoink;","import React from 'react';\nimport './game.css'\n\nconst bad = ['0x1F354','0x1F35F','0x1F355','0x1F96E','0x1F361','0x1F366','0x1F369','0x1F36A','0x1F9C1','0x1F36C'];\nconst good = ['0x1F957','0x1F966','0x1F96C','0x1F952','0x1F955','0x1F346','0x1F951','0x1F345','0x1F363','0x1F360'];\nconst location = ['one', 'two','three','four','five','six','seven','eight','nine']\n\n\nfunction getItemsNeeded(level) {\n   // console.log('the level is ' + level)\n    const start = 4;\n    let neededItems = 5;\n    if (level<6){\n        neededItems = start + level;\n    } else if (level<8){\n        neededItems = level + 2\n    } else if (level<10) {\n        neededItems = level - 3\n    } else {\n        return 9\n    }\n   // console.log('we will have '+neededItems+ ' items this round');\n    return neededItems\n    \n}\n\nfunction getNumberOfBad (level){\n    if (level<6){\n        return level + 2\n    } else if (level<8) {\n        return level - 2\n    } else {\n        return Math.floor(Math.random() * Math.floor(4)) + 1\n    }\n}\n\nfunction getRandomRange (itemsNeeded, max){\n    let range = [];\n    while(range.length<itemsNeeded) {\n    const randomNumber = Math.floor(Math.random() * Math.floor(max));\n    if(range.indexOf(randomNumber) === -1) range.push(randomNumber);\n    }\n    return range\n}\n\nclass FoodItem extends React.Component{\n    constructor(props) {\n        super(props);\nthis.handleFoodChoise=this.handleFoodChoise.bind(this); \n      }\n\n    handleFoodChoise(e){\n       // console.log('you made your choice ' + this.props.foodItem.fType)\n        this.props.foodChoise(this.props.foodItem)\n\n        \n    }\nrender(){\n    return (<span  onClick={this.handleFoodChoise} role=\"image\"  className={this.props.locations[this.props.food.indexOf(this.props.foodItem)]}>{String.fromCodePoint(this.props.foodItem.pic)}</span>)\n}\n}\n\n\nclass Gamefield extends React.Component{\n\n    constructor(props) {\n        super(props);\nthis.handleRestart=this.handleRestart.bind(this); \n      }\n    \n    getfood(itemsNeeded, level) {\n        const badN = getNumberOfBad(level);\n        const goodN = itemsNeeded - badN;\n       // console.log('from '+itemsNeeded+' number of items you get '+goodN+ ' of good and '+badN+ ' of bad')\n\n        let food = [];\n        //get good food\n        const goodRange = getRandomRange(goodN, 10);\n        goodRange.forEach(index=>\n            food.push(\n                {pic: good[index],\n                fType: 'good'}\n                )\n            )\n        \n        //add bad food\n        const badRange = getRandomRange(badN, 10);\n        badRange.forEach(index=>\n            food.push(\n                {pic: bad[index],\n                fType: 'bad'}\n                )\n            )\n       // console.log(food);\n        return food\n        \n    }\n\n    getLocation (itemsNeeded){\n        const range = getRandomRange(itemsNeeded, 9);\n        let locations = [];\n        range.forEach(index=> {\n            locations.push(location[index])\n        })\n       // console.log(locations);\n        return locations\n    }\n\n    handleRestart(e){\n        this.props.restart()\n    }\n    \n    render(){\n        const level = this.props.level;\n        const itemsQ = getItemsNeeded(level);\n        const food = this.getfood(itemsQ, level);\n        const locations = this.getLocation(itemsQ);\n        const affection = Math.abs(this.props.affection);\n\n        if (level <10 && affection < 3){\n        return  (<div className='grid'>\n            {food.map(foodItem => {\n                \n                return <FoodItem foodChoise={this.props.foodChoise} key ={foodItem.pic} food={food} locations={locations} foodItem={foodItem}/>\n                \n            })}\n\n        </div>)}\n        else if(affection>=3) {\n            return (<div className='grid' >\n            <h2>Spinat is not going to be your friend</h2>\n            <button onClick={this.handleRestart}>Try again</button>\n            </div>)\n        } else if (level>= 10 && this.props.affection === -1 ||this.props.affection === -2) {\n            return (<div className='grid' >\n                <h2>Spinat is your friend FOREVER!</h2>\n                <button onClick={this.handleRestart}>Try again</button>\n                </div>) \n        }\n        else {\n            return (<div className='grid' >\n                <h2>Spinat is not going to be your friend</h2>\n                <button onClick={this.handleRestart}>Try again</button>\n                </div>)\n        }\n    }\n}\n\nexport default Gamefield;\n\n\n\n","import React from 'react';\nimport './game.css';\nimport Spoink from './spinat';\nimport Gamefield from './grid';\n\nclass Game extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            level: 1,\n            affection: 0,\n        }\n       this.foodChoise=this.foodChoise.bind(this);\n       this.restartGame=this.restartGame.bind(this);\n    }\n\n    foodChoise(foodItem){\n        const newLevel = this.state.level + 1;\n        let newAffection = this.state.affection;\n        if(foodItem.fType === 'bad') {\n            newAffection = newAffection -1\n        } else {\n            newAffection = newAffection + 1\n        }\n        this.setState(\n            {\n                level: newLevel,\n                affection: newAffection\n            }\n        )\n    }\n\n    restartGame(){\n        this.setState({\n            level: 1,\n            affection: 0,\n        })\n    }\n\nrender(){\n    return (<div className=\"gameContainer\">\n        <h1> Try to make friends with Spinat by offering it food</h1>\n        <p>Click on the food and see what the broccoli does </p>\n        <div className='game'>\n            \n        <Gamefield restart={this.restartGame} affection={this.state.affection} foodChoise={this.foodChoise}  level={this.state.level} />\n        <Spoink affection={this.state.affection} />\n        </div>\n        </div>\n    )\n}\n\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport Coolchart from './components/Infograph/infograph';\nimport MyBio from './components/Story/story';\nimport Test from './components/Test/test';\nimport NavBar from './components/Nav/nav';\nimport RenderWalk from './components/Parks and weather/parks';\nimport Game from './components/game/game';\n\n/*\n<NavBar />\n<div className='app'>\n<div id=\"bio\"><MyBio className='bio' /></div>\n\n<div id=\"chart\"><Coolchart className='chart' /></div>\n<div id=\"test\" ><Test className='form'/></div>\n<div id=\"walk\"><RenderWalk  /> </div>\n<div id=\"game\"><Game  /> </div>\n</div>\n*/\n\nconst content = [\n  {\n    type: 'graph',\n    info: 'API Data Get and Graph Display',\n    desc: 'This app gets financial data and displays it on a graph'\n  },\n\n  {\n    type: 'mail',\n    info: 'Forms, Tests and Subscriptions',\n    desc: 'This app gathers data and sends an email based on the info provided'\n  },\n\n  {\n    type: 'park',\n    info: 'API Data Get and List Display',\n    desc: 'This app displays parks in a chosen city'\n  },\n\n  {\n    type: 'igame',\n    info: 'Interactive browser game',\n    desc: 'This app is a simple browser game'\n  },\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'none',\n      appToShow: 'none'\n  };\n    this.giveDesc = this.giveDesc.bind(this);\n    this.hideDesc = this.hideDesc.bind(this);\n    this.showApp = this.showApp.bind(this);\n    this.hideApp = this.hideApp.bind(this);\n  }\n\n  showApp(e){\n    if (e==='graph'){\n    this.setState(\n     {appToShow: <Coolchart className='chart' />}\n   )} else if (e==='igame'){\n   this.setState(\n    {appToShow: <Game  />}\n  ) }\n  else if (e === 'park'){\n    this.setState(\n      {appToShow: <RenderWalk  />}\n    )\n  } else if (e === 'mail'){\n    this.setState(\n      {appToShow: <Test className='form'/>}\n    )\n  }\n   }\n\n  hideDesc(){\n    this.setState(\n     { active: 'none'}\n    )\n  }\n\n  giveDesc(e){\n    this.setState(\n      { active: e}\n     )\n  }\n  hideApp(){\n    this.setState(\n      { \n        appToShow: 'none',\n        active: 'none'\n    }\n     )\n  }\n  render() {\n    if (this.state.appToShow === 'none')\n    {return (\n   <div >\n<div className=\"head\">\n<h1>Sol Dvortsova</h1>\n\n<p>Hi, I'm starting out as JS programmer. Look what I can do:</p>\n</div>\n<div className=\"works\" >\n{content.map(item => {\n  if (item.type === this.state.active){\n  return (<div key={item.type} className={item.type} \n   onMouseLeave = {this.hideDesc}\n   onClick = {() => this.showApp(item.type)}\n  >\n  <p className='desc'>{item.desc}</p>\n</div>)}\nelse {\n  return (<div key={item.type} className={item.type} \n    onMouseOver={() => this.giveDesc(item.type)} \n    onMouseLeave = {this.hideDesc}\n    onClick = {() => this.showApp(item.type)}\n    >\n    <p className='info'>{item.info}</p>\n  </div>)\n\n}\n})}\n    \n</div>\n<div className=\"footer\">\n<p  >If you want to hire me, let me know.</p>\n<a href=\"mailto: solvita.dvortsova@icloud.com?Subject=Hi Sol!\" target=\"_top\"><button>Contact via email</button></a>\n<a href=\"https://t.me/BlockchainSol\"><button>Contact via Telegram</button></a>\n</div>\n      \n    </div>\n  )} else {\n    return (\n    <div >\n      <div className=\"head\">\n      <button onClick={this.hideApp}>Back to main</button>\n      </div>\n      {this.state.appToShow}\n      </div>\n    )\n  }\n  \n  \n  ;}\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}