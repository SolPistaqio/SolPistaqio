{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2'; //import { defaults } from 'react-chartjs-2';\n//import { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\nconst numberNeeded = 20;\n\nfunction getStockdata(crypto, currency, numberNeeded) {\n  console.log(numberNeeded);\n  const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=' + crypto + '&market=' + currency + '&apikey=' + apiKey;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Request failed!');\n  }, networkError => {\n    console.log(networkError.message);\n  }).then(jsonResponse => {\n    //console.log(jsonResponse);\n    const data = {\n      labels: Object.keys(jsonResponse['Time Series (Digital Currency Daily)']).reverse().slice(0, numberNeeded),\n      label: jsonResponse['Meta Data']['3. Digital Currency Name'],\n      data: Object.values(jsonResponse['Time Series (Digital Currency Daily)']).map(value => {\n        return value['1a. open (' + jsonResponse['Meta Data']['4. Market Code'] + ')'];\n      }).reverse().slice(0, numberNeeded).map(value => {\n        return parseFloat(value);\n      }),\n      text: jsonResponse['Meta Data']['5. Market Name'] + '/' + jsonResponse['Meta Data']['3. Digital Currency Name']\n    };\n    return data;\n  });\n}\n\n;\n\nclass Infograph extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.search('ETH', 'EUR', 20);\n  }\n\n  render() {\n    //console.log(Object.values(this.props.data['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+this.props.data['Meta Data']['4. Market Code']+')']}).reverse().slice(0,numberNeeded).map(\n    //    value => {return parseFloat(value)}\n    // ));\n    //  console.log(Object. keys(this.props.data['Time Series (Digital Currency Daily)']).reverse().slice(0,numberNeeded));\n    //getStockdata('ETH','USD');\n    const data = {\n      labels: this.props.data.labels,\n      datasets: [{\n        label: this.props.data.label,\n        data: this.props.data.data\n      }]\n    };\n\n    if (this.props.show) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        options: {\n          title: {\n            display: true,\n            text: this.props.data.text,\n            fontSize: 25\n          },\n          legend: {\n            display: false,\n            position: 'left'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"7\",\n        name: \"Days Needed\",\n        value: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"7\"), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Get data\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"7\",\n        name: \"Days Needed\",\n        value: \"7\",\n        checked: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"7\"), React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"14\",\n        name: \"Days Needed\",\n        value: \"14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"14\"), React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"30\",\n        name: \"Days Needed\",\n        value: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"30\"), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Get data\"));\n    }\n  }\n\n}\n\n;\n\nclass Coolchart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      display: false\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleSearch(crypto, currency, numberNeeded) {\n    return getStockdata(crypto, currency, numberNeeded).then(response => this.setState({\n      data: response,\n      display: true\n    }));\n  }\n\n  render() {\n    //console.log(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Infograph, {\n      show: this.state.display,\n      data: this.state.data,\n      search: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Coolchart;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js"],"names":["React","Component","Line","apiKey","numberNeeded","getStockdata","crypto","currency","console","log","url","fetch","then","response","ok","json","Error","networkError","message","jsonResponse","data","labels","Object","keys","reverse","slice","label","values","map","value","parseFloat","text","Infograph","constructor","props","handleClick","bind","e","search","render","datasets","show","title","display","fontSize","legend","position","Coolchart","state","handleSearch","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Line} from 'react-chartjs-2';\n//import { defaults } from 'react-chartjs-2';\n//import { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\n\nconst numberNeeded = 20;\n\n\n\nfunction getStockdata(crypto ,currency, numberNeeded) {\n    console.log(numberNeeded);\n    const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol='+crypto+'&market='+currency+'&apikey=' + apiKey\n    return fetch(url).then(response => {\n        if (response.ok) {\n          return response.json()\n        } \n          throw new Error('Request failed!');\n        \n      }, networkError => {\n        console.log(networkError.message)\n      }).then(jsonResponse=>{\n       //console.log(jsonResponse);\n         \n        const data = \n        {labels: Object.keys(jsonResponse['Time Series (Digital Currency Daily)']).reverse().slice(0,numberNeeded),\n        label: jsonResponse['Meta Data']['3. Digital Currency Name'],\n        data: Object.values(jsonResponse['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+jsonResponse['Meta Data']['4. Market Code']+')']}).reverse().slice(0,numberNeeded).map(\n                value => {return parseFloat(value)}),\n        text : jsonResponse['Meta Data']['5. Market Name']+'/'+jsonResponse['Meta Data']['3. Digital Currency Name'],\n        }\n        return data\n        \n      })};\n\n\nclass Infograph extends Component {\nconstructor (props) {\n    super(props);\n    \nthis.handleClick=this.handleClick.bind(this);\n\n}\n\nhandleClick(e){\n    this.props.search('ETH','EUR', 20)\n}\n\n\nrender() {\n    //console.log(Object.values(this.props.data['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+this.props.data['Meta Data']['4. Market Code']+')']}).reverse().slice(0,numberNeeded).map(\n    //    value => {return parseFloat(value)}\n   // ));\n  //  console.log(Object. keys(this.props.data['Time Series (Digital Currency Daily)']).reverse().slice(0,numberNeeded));\n  //getStockdata('ETH','USD');\n  const data = {\n    labels:  this.props.data.labels,\n    datasets: [{\n        label: this.props.data.label, \n        data: this.props.data.data,\n    } ]\n}\n  if (this.props.show) { \n  return (\n        <div className=\"chart\">\n            <Line \n                data= {data}\n            \n                options = {{\n                    title: {\n                        display: true,\n                        text: this.props.data.text,\n                        fontSize: 25\n                    },\n                    legend: {\n                       display: false,\n                       position: 'left'\n                    }\n                }}\n            \n            \n            />\n            <input type=\"radio\" id=\"7\" name=\"Days Needed\" value=\"7\"></input>\n            <label for=\"7\">7</label>\n            <button onClick={this.handleClick}>Get data</button>\n        </div>)}\n    else {return (<div>\n        <input type=\"radio\" id=\"7\" name=\"Days Needed\" value=\"7\" checked = 'true'></input>\n        <label for=\"7\">7</label>\n        <input type=\"radio\" id=\"14\" name=\"Days Needed\" value=\"14\"></input>\n        <label for=\"14\">14</label>\n        <input type=\"radio\" id=\"30\" name=\"Days Needed\" value=\"30\"></input>\n        <label for=\"30\">30</label>\n    <button onClick={this.handleClick}>Get data</button>\n    </div>\n    )}\n}\n};\n\nclass Coolchart extends React.Component{\n    constructor (props) {\n        super(props);\n        this.state = {\n            data: {},\n            display: false\n        }\n    this.handleSearch = this.handleSearch.bind(this)\n    }\n    handleSearch(crypto ,currency, numberNeeded){\n      return getStockdata(crypto ,currency,numberNeeded).then(response => this.setState({\n           data: response,\n           display: true\n       }))\n    }\n    render() {\n    //console.log(this.state.data);\n      return ( <div>\n      <Infograph show={this.state.display} data={this.state.data} search={this.handleSearch}/>\n      </div>\n      )\n    }\n}\nexport default Coolchart;"]},"metadata":{},"sourceType":"module"}