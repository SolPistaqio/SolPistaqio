{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js\";\nimport React from 'react';\nlet questions = [{\n  title: 'Do you like warm and fuzzy pets?',\n  display: true,\n  type: \"radio\",\n  name: \"fuzzy\",\n  id: 1,\n  options: [{\n    idAndValue: 'yes',\n    label: \"Yes\"\n  }, {\n    idAndValue: 'no',\n    label: \"No\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 2,\n  options: [{\n    idAndValue: 'dog',\n    label: \"Dog\"\n  }, {\n    idAndValue: 'hamster',\n    label: \"Hamster\"\n  }, {\n    idAndValue: 'cat',\n    label: \"Cat\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 3,\n  options: [{\n    idAndValue: 'pig',\n    label: \"Pig\"\n  }, {\n    idAndValue: 'lizard',\n    label: \"Lizard\"\n  }, {\n    idAndValue: 'snake',\n    label: \"Snake\"\n  }]\n}, {\n  title: 'What is your name?',\n  display: false,\n  type: 'text',\n  name: 'name',\n  id: 4,\n  options: [{\n    idAndValue: 'name',\n    label: \"Name\"\n  }]\n}, {\n  title: 'What is your email?',\n  display: false,\n  type: 'text',\n  name: 'email',\n  id: 5,\n  options: [{\n    idAndValue: 'emal',\n    label: \"Email\"\n  }]\n}];\n\nclass RenderQuestionOption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    console.log(e.target.name); // console.log(e.target);\n\n    const value = e.target.value;\n    const field = e.target.name; // this.props.changeQuestion(field,value);\n  }\n\n  render() {\n    let option = this.props.option;\n    let question = this.props.question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: question.id,\n      onClick: this.handleChange,\n      type: question.type,\n      id: option.idAndValue,\n      name: question.name,\n      value: option.idAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: option.idAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, option.label));\n  }\n\n}\n\n;\n\nclass RenderOptions extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.options.options.map(option => React.createElement(RenderQuestionOption, {\n      changeQuestion: this.props.changeQuestion,\n      question: this.props.options,\n      option: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nclass RenderQuestion extends React.Component {\n  render() {\n    if (this.props.number.fur === \"Notspec\" && this.props.question.id === 1) {\n      console.log(this.props.number);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    } else if (this.props.number.fur === \"yes\" && this.props.question.id === 2) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    } else if (this.props.number.fur === \"no\" && this.props.question.id === 3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    } else if (this.props.number.pet !== \"Notspec\" && this.props.question.id > 3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\n;\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fur: 'Notspec',\n      question: 1,\n      pet: \"Notspec\",\n      email: \"Notspec\",\n      name: \"Notspec\"\n    };\n    this.changeQuestion = this.changeQuestion.bind(this); //this.changeContacts = this.changeContacts.bind(this);\n  }\n\n  changeQuestion(field, value) {\n    console.log(field);\n    console.log(value); //if(field === \"fuzzy\") {\n    //this.setState({fur: value});\n\n    console.log(this.state.fur); // } else if (field === \"pet\") {\n    // this.setState({pet: value});\n    //console.log(value);\n    // } else {\n    //console.log(value);\n    // };\n  }\n\n  //changeContacts(name,email) {\n  //  this.setState({\n  //     name: name,\n  //      email: email\n  //  });\n  //}\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"http://server1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, questions.map(question => React.createElement(RenderQuestion, {\n      changeQuestion: this.changeQuestion,\n      number: this.state,\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), \" \");\n  }\n\n}\n\n;\nexport default Test;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js"],"names":["React","questions","title","display","type","name","id","options","idAndValue","label","RenderQuestionOption","Component","constructor","props","handleChange","bind","e","console","log","target","value","field","render","option","question","RenderOptions","map","changeQuestion","RenderQuestion","number","fur","pet","Test","state","email"],"mappings":"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","sourcesContent":["import React from 'react';\n\nlet questions = [\n    { title : 'Do you like warm and fuzzy pets?',\n     display: true,\n     type: \"radio\",\n     name: \"fuzzy\",\n     id: 1,\n     options: [{\n         idAndValue: 'yes',\n         label: \"Yes\"\n     }, {\n         idAndValue: 'no',\n         label: \"No\"\n     }]},\n     {title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 2,\n     options: [{\n         idAndValue: 'dog',\n         label: \"Dog\"\n     }, {\n         idAndValue: 'hamster',\n         label: \"Hamster\"\n     }, \n     {\n         idAndValue: 'cat',\n         label: \"Cat\"\n     }]},{\n     title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 3,\n     options: [{\n         idAndValue: 'pig',\n         label: \"Pig\"\n     }, {\n         idAndValue: 'lizard',\n         label: \"Lizard\"\n     }, \n     {\n         idAndValue: 'snake',\n         label: \"Snake\"\n     }]},\n     {\n         title: 'What is your name?',\n         display: false,\n         type: 'text',\n         name: 'name',\n         id: 4,\n         options: [{\n         idAndValue: 'name',\n         label: \"Name\"\n         }]\n     },\n     {\n         title: 'What is your email?',\n         display: false,\n         type: 'text',\n         name: 'email',\n         id: 5,\n         options: [{\n         idAndValue: 'emal',\n         label: \"Email\"\n         }]\n     }\n ];\n\n class RenderQuestionOption extends React.Component {\n    constructor(props) {\n        super(props);\nthis.handleChange=this.handleChange.bind(this) \n      }\n\n    handleChange(e) {\n    console.log(e.target.value);\n       console.log(e.target.name);\n       // console.log(e.target);\n        const value = e.target.value;\n       const field = e.target.name;\n      // this.props.changeQuestion(field,value);\n      }\n     render (){\n         let option = this.props.option;\n         let question = this.props.question;\n         \n        return (<div>\n          <input key = {question.id} onClick = {this.handleChange} type={question.type} id={option.idAndValue} name={question.name} value={option.idAndValue}  />\n         <label for={option.idAndValue}>{option.label}</label> \n        </div>)\n     }\n };\n\n class RenderOptions extends React.Component {\n    render () {\n        return (<div> \n            {this.props.options.options.map(option => <RenderQuestionOption changeQuestion = {this.props.changeQuestion} question = {this.props.options} option = {option}/>)}\n            </div>\n            )\n    \n    }\n };\n class RenderQuestion extends React.Component {\n    render (){\n        if (this.props.number.fur === \"Notspec\" && this.props.question.id === 1){\n            console.log(this.props.number);\n        return (<div>\n        <p>{this.props.question.title}</p>\n            <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n            </div>\n            )} else if (this.props.number.fur === \"yes\" && this.props.question.id === 2){\n                return <div>\n                <p>{this.props.question.title}</p>\n                    <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                    </div>\n            }\n         else if (this.props.number.fur === \"no\" && this.props.question.id === 3){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                </div>\n        } else if (this.props.number.pet !== \"Notspec\" && this.props.question.id >3 ){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                </div>\n        } else {\n            return <div></div>\n        }\n        \n      }\n        \n};\n\n\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fur: 'Notspec',\n          question: 1,\n          pet: \"Notspec\",\n          email: \"Notspec\",\n          name: \"Notspec\"\n      };\n        this.changeQuestion = this.changeQuestion.bind(this);\n        //this.changeContacts = this.changeContacts.bind(this);\n      }\n      \n      changeQuestion(field, value) {\n        console.log(field);\n        console.log(value);\n        //if(field === \"fuzzy\") {\n        //this.setState({fur: value});\n        console.log(this.state.fur);\n       // } else if (field === \"pet\") {\n       // this.setState({pet: value});\n       //console.log(value);\n      // } else {\n      //console.log(value);\n       // };\n\n  };\n\n\n\n  //changeContacts(name,email) {\n  //  this.setState({\n  //     name: name,\n  //      email: email\n  //  });\n  //}\n    \n    render(){\n        return (<div>\n        <form method=\"post\" action=\"http://server1\">\n            {questions.map(question =>  <RenderQuestion changeQuestion = {this.changeQuestion} number = {this.state} question = {question}/>)}\n            <br/>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form> </div>);\n    }\n};\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}