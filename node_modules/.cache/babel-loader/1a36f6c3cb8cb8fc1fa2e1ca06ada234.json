{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2'; //import { defaults } from 'react-chartjs-2';\n//import { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\nconst numberNeeded = 20;\n\nfunction getStockdata(crypto, currency, numberNeeded) {\n  console.log(numberNeeded);\n  const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=' + crypto + '&market=' + currency + '&apikey=' + apiKey;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Request failed!');\n  }, networkError => {\n    console.log(networkError.message);\n  }).then(jsonResponse => {\n    //console.log(jsonResponse);\n    const data = {\n      labels: Object.keys(jsonResponse['Time Series (Digital Currency Daily)']).reverse().slice(-numberNeeded),\n      label: jsonResponse['Meta Data']['3. Digital Currency Name'],\n      data: Object.values(jsonResponse['Time Series (Digital Currency Daily)']).map(value => {\n        return value['1a. open (' + jsonResponse['Meta Data']['4. Market Code'] + ')'];\n      }).reverse().slice(-numberNeeded).map(value => {\n        return parseFloat(value);\n      }),\n      text: jsonResponse['Meta Data']['5. Market Name'] + '/' + jsonResponse['Meta Data']['3. Digital Currency Name']\n    };\n    return data;\n  });\n}\n\n;\n\nclass Infograph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 7,\n      crypto: 'ETH',\n      currency: 'EUR'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDayChange = this.handleDayChange.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.search(this.state.crypto, this.state.currency, this.state.days);\n  }\n\n  handleDayChange(e) {\n    console.log(e.target.name);\n    const newDays = e.target.value;\n    this.setState({\n      days: newDays\n    });\n  }\n\n  render() {\n    //console.log(Object.values(this.props.data['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+this.props.data['Meta Data']['4. Market Code']+')']}).reverse().slice(0,numberNeeded).map(\n    //    value => {return parseFloat(value)}\n    // ));\n    //  console.log(Object. keys(this.props.data['Time Series (Digital Currency Daily)']).reverse().slice(0,numberNeeded));\n    //getStockdata('ETH','USD');\n    const choseDays = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onClick: this.handleDayChange,\n      type: \"radio\",\n      id: \"7\",\n      name: \"Days Needed\",\n      value: \"7\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"input\", {\n      onClick: this.handleDayChange,\n      type: \"radio\",\n      id: \"14\",\n      name: \"Days Needed\",\n      value: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"14\"), React.createElement(\"input\", {\n      onClick: this.handleDayChange,\n      type: \"radio\",\n      id: \"30\",\n      name: \"Days Needed\",\n      value: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"30\"), React.createElement(\"input\", {\n      onClick: this.handleDayChange,\n      type: \"radio\",\n      id: \"100\",\n      name: \"Days Needed\",\n      value: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"100\"));\n    const data = {\n      labels: this.props.data.labels,\n      datasets: [{\n        label: this.props.data.label,\n        data: this.props.data.data\n      }]\n    };\n\n    if (this.props.show) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        options: {\n          title: {\n            display: true,\n            text: this.props.data.text,\n            fontSize: 25\n          },\n          legend: {\n            display: false,\n            position: 'left'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), choseDays, React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Get data\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, choseDays, React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Get data\"));\n    }\n  }\n\n}\n\n;\n\nclass Coolchart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      display: false\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleSearch(crypto, currency, numberNeeded) {\n    return getStockdata(crypto, currency, numberNeeded).then(response => this.setState({\n      data: response,\n      display: true\n    }));\n  }\n\n  render() {\n    //console.log(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Infograph, {\n      show: this.state.display,\n      data: this.state.data,\n      search: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Coolchart;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js"],"names":["React","Component","Line","apiKey","numberNeeded","getStockdata","crypto","currency","console","log","url","fetch","then","response","ok","json","Error","networkError","message","jsonResponse","data","labels","Object","keys","reverse","slice","label","values","map","value","parseFloat","text","Infograph","constructor","props","state","days","handleClick","bind","handleDayChange","e","search","target","name","newDays","setState","render","choseDays","datasets","show","title","display","fontSize","legend","position","Coolchart","handleSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Line} from 'react-chartjs-2';\n//import { defaults } from 'react-chartjs-2';\n//import { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\n\nconst numberNeeded = 20;\n\n\n\nfunction getStockdata(crypto ,currency, numberNeeded) {\n    console.log(numberNeeded);\n    const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol='+crypto+'&market='+currency+'&apikey=' + apiKey\n    return fetch(url).then(response => {\n        if (response.ok) {\n          return response.json()\n        } \n          throw new Error('Request failed!');\n        \n      }, networkError => {\n        console.log(networkError.message)\n      }).then(jsonResponse=>{\n       //console.log(jsonResponse);\n         \n        const data = \n        {labels: Object.keys(jsonResponse['Time Series (Digital Currency Daily)'])\n        .reverse()\n        .slice(-numberNeeded),\n        label: jsonResponse['Meta Data']['3. Digital Currency Name'],\n        data: Object.values(jsonResponse['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+jsonResponse['Meta Data']['4. Market Code']+')']}).\n        reverse().\n        slice(-numberNeeded).map(\n                value => {return parseFloat(value)}),\n        text : jsonResponse['Meta Data']['5. Market Name']+'/'+jsonResponse['Meta Data']['3. Digital Currency Name'],\n        }\n        return data\n        \n      })};\n\n\nclass Infograph extends Component {\nconstructor (props) {\n    super(props);\n    this.state = {\n        days:7,\n        crypto: 'ETH',\n        currency: 'EUR'\n    }\n    \nthis.handleClick=this.handleClick.bind(this);\nthis.handleDayChange=this.handleDayChange.bind(this)\n\n}\n\nhandleClick(e){\n    this.props.search(this.state.crypto,this.state.currency, this.state.days)\n}\n\nhandleDayChange(e){\n    console.log(e.target.name)\n    const newDays = e.target.value;\n    this.setState({\n        days:newDays\n    })\n}\n\n\nrender() {\n    //console.log(Object.values(this.props.data['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+this.props.data['Meta Data']['4. Market Code']+')']}).reverse().slice(0,numberNeeded).map(\n    //    value => {return parseFloat(value)}\n   // ));\n  //  console.log(Object. keys(this.props.data['Time Series (Digital Currency Daily)']).reverse().slice(0,numberNeeded));\n  //getStockdata('ETH','USD');\n\n  const choseDays = \n  <div>\n  <input onClick={this.handleDayChange} type=\"radio\" id=\"7\" name=\"Days Needed\" value=\"7\" defaultChecked></input>\n  <label for=\"7\">7</label>\n  <input onClick={this.handleDayChange} type=\"radio\" id=\"14\" name=\"Days Needed\" value=\"14\"></input>\n  <label for=\"14\">14</label>\n  <input onClick={this.handleDayChange} type=\"radio\" id=\"30\" name=\"Days Needed\" value=\"30\"></input>\n  <label for=\"30\">30</label>\n  <input onClick={this.handleDayChange} type=\"radio\" id=\"100\" name=\"Days Needed\" value=\"100\"></input>\n  <label for=\"100\">100</label>\n  </div>;\n  const data = {\n    labels:  this.props.data.labels,\n    datasets: [{\n        label: this.props.data.label, \n        data: this.props.data.data,\n    } ]\n}\n  if (this.props.show) { \n  return (\n        <div className=\"chart\">\n            <Line \n                data= {data}\n            \n                options = {{\n                    title: {\n                        display: true,\n                        text: this.props.data.text,\n                        fontSize: 25\n                    },\n                    legend: {\n                       display: false,\n                       position: 'left'\n                    }\n                }}\n            \n            \n            />\n            {choseDays}\n            <button onClick={this.handleClick}>Get data</button>\n        </div>)}\n    else {return (<div>\n        {choseDays}\n    <button onClick={this.handleClick}>Get data</button>\n    </div>\n    )}\n}\n};\n\nclass Coolchart extends React.Component{\n    constructor (props) {\n        super(props);\n        this.state = {\n            data: {},\n            display: false\n        }\n    this.handleSearch = this.handleSearch.bind(this)\n    }\n    handleSearch(crypto ,currency, numberNeeded){\n      return getStockdata(crypto ,currency,numberNeeded).then(response => this.setState({\n           data: response,\n           display: true\n       }))\n    }\n    render() {\n    //console.log(this.state.data);\n      return ( <div>\n      <Infograph show={this.state.display} data={this.state.data} search={this.handleSearch}/>\n      </div>\n      )\n    }\n}\nexport default Coolchart;"]},"metadata":{},"sourceType":"module"}