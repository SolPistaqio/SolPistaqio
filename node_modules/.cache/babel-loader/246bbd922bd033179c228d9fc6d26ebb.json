{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js\";\nimport React from 'react';\nlet questions = [{\n  title: 'Do you like warm and fuzzy pets?',\n  display: true,\n  type: \"radio\",\n  name: \"fuzzy\",\n  id: 1,\n  options: [{\n    idAndValue: 'yes',\n    label: \"Yes\"\n  }, {\n    idAndValue: 'no',\n    label: \"No\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 2,\n  options: [{\n    idAndValue: 'dog',\n    label: \"Dog\"\n  }, {\n    idAndValue: 'hamster',\n    label: \"Hamster\"\n  }, {\n    idAndValue: 'cat',\n    label: \"Cat\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 3,\n  options: [{\n    idAndValue: 'pig',\n    label: \"Pig\"\n  }, {\n    idAndValue: 'lizard',\n    label: \"Lizard\"\n  }, {\n    idAndValue: 'snake',\n    label: \"Snake\"\n  }]\n}, {\n  title: 'What is your name?',\n  display: false,\n  type: 'text',\n  name: 'name',\n  id: 4,\n  options: [{\n    idAndValue: 'name',\n    label: \"Name\"\n  }]\n}, {\n  title: 'What is your email?',\n  display: false,\n  type: 'text',\n  name: 'email',\n  id: 5,\n  options: [{\n    idAndValue: 'emal',\n    label: \"Email\"\n  }]\n}];\n\nclass RenderQuestionOption extends React.Component {\n  render() {\n    let option = this.props.option;\n    let question = this.props.question;\n    let field = question.name;\n    let value = option.idAndValue;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: question.id,\n      onClick: this.props.onClick({\n        field\n      }, {\n        value\n      }),\n      type: question.type,\n      id: option.idAndValue,\n      name: question.name,\n      value: option.idAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: option.idAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, option.label));\n  }\n\n}\n\n;\n\nclass RenderOptions extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.options.options.map(option => React.createElement(RenderQuestionOption, {\n      onClick: this.props.onClick(),\n      question: this.props.options,\n      option: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nclass RenderQuestion extends React.Component {\n  render() {\n    if (this.props.number.fur === \"Notspec\" && this.props.question.id === 1) {\n      console.log(this.props.number);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        onClick: this.props.onClick(),\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    } else if (this.props.number.fur === \"yes\" && this.props.question.id === 2) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        onClick: this.props.onClick(),\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    } else if (this.props.number.fur === \"no\" && this.props.question.id === 3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        onClick: this.props.onClick(),\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    } else if (this.props.number.pet !== \"Notspec\" && this.props.question.id > 3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        onClick: this.props.onClick(),\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\n;\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeQuestion = (field, value) => {\n      console.log(field);\n      console.log(value); //if(field === \"fuzzy\") {\n      //this.setState({fur: value});\n\n      console.log(this.state.fur); //} else if (field === \"pet\") {\n      // this.setState({pet: value});\n      // console.log(value);\n      //  } else {\n      //   console.log(value);\n      //};\n    };\n\n    this.changeContacts = (name, email) => {\n      this.setState({\n        name: name,\n        email: email\n      });\n    };\n\n    this.state = {\n      fur: 'Notspec',\n      question: 1,\n      pet: \"Notspec\",\n      email: \"Notspec\",\n      name: \"Notspec\"\n    };\n    this.changeQuestion = this.changeQuestion.bind(this);\n    this.changeContacts = this.changeContacts.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"http://server1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, questions.map(question => React.createElement(RenderQuestion, {\n      onClick: this.changeQuestion(),\n      number: this.state,\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), \" \");\n  }\n\n}\n\n;\nexport default Test;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js"],"names":["React","questions","title","display","type","name","id","options","idAndValue","label","RenderQuestionOption","Component","render","option","props","question","field","value","onClick","RenderOptions","map","RenderQuestion","number","fur","console","log","pet","Test","constructor","changeQuestion","state","changeContacts","email","setState","bind"],"mappings":"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","sourcesContent":["import React from 'react';\n\nlet questions = [\n    { title : 'Do you like warm and fuzzy pets?',\n     display: true,\n     type: \"radio\",\n     name: \"fuzzy\",\n     id: 1,\n     options: [{\n         idAndValue: 'yes',\n         label: \"Yes\"\n     }, {\n         idAndValue: 'no',\n         label: \"No\"\n     }]},\n     {title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 2,\n     options: [{\n         idAndValue: 'dog',\n         label: \"Dog\"\n     }, {\n         idAndValue: 'hamster',\n         label: \"Hamster\"\n     }, \n     {\n         idAndValue: 'cat',\n         label: \"Cat\"\n     }]},{\n     title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 3,\n     options: [{\n         idAndValue: 'pig',\n         label: \"Pig\"\n     }, {\n         idAndValue: 'lizard',\n         label: \"Lizard\"\n     }, \n     {\n         idAndValue: 'snake',\n         label: \"Snake\"\n     }]},\n     {\n         title: 'What is your name?',\n         display: false,\n         type: 'text',\n         name: 'name',\n         id: 4,\n         options: [{\n         idAndValue: 'name',\n         label: \"Name\"\n         }]\n     },\n     {\n         title: 'What is your email?',\n         display: false,\n         type: 'text',\n         name: 'email',\n         id: 5,\n         options: [{\n         idAndValue: 'emal',\n         label: \"Email\"\n         }]\n     }\n ];\n\n class RenderQuestionOption extends React.Component {\n     render (){\n         let option = this.props.option;\n         let question = this.props.question;\n         let field = question.name;\n         let value = option.idAndValue;\n        return (<div>\n          <input key = {question.id} onClick = {this.props.onClick({field},{value})} type={question.type} id={option.idAndValue} name={question.name} value={option.idAndValue}  />\n         <label for={option.idAndValue}>{option.label}</label> \n        </div>)\n     }\n };\n\n class RenderOptions extends React.Component {\n    render () {\n        return (<div> \n            {this.props.options.options.map(option => <RenderQuestionOption onClick = {this.props.onClick()} question = {this.props.options} option = {option}/>)}\n            </div>\n            )\n    \n    }\n };\n class RenderQuestion extends React.Component {\n    render (){\n        if (this.props.number.fur === \"Notspec\" && this.props.question.id === 1){\n            console.log(this.props.number);\n        return (<div>\n        <p>{this.props.question.title}</p>\n            <RenderOptions onClick = {this.props.onClick()} options = {this.props.question}/>\n            </div>\n            )} else if (this.props.number.fur === \"yes\" && this.props.question.id === 2){\n                return <div>\n                <p>{this.props.question.title}</p>\n                    <RenderOptions onClick = {this.props.onClick()} options = {this.props.question}/>\n                    </div>\n            }\n         else if (this.props.number.fur === \"no\" && this.props.question.id === 3){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions onClick = {this.props.onClick()} options = {this.props.question}/>\n                </div>\n        } else if (this.props.number.pet !== \"Notspec\" && this.props.question.id >3 ){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions onClick = {this.props.onClick()} options = {this.props.question}/>\n                </div>\n        } else {\n            return <div></div>\n        }\n        \n      }\n        \n};\n\n\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fur: 'Notspec',\n          question: 1,\n          pet: \"Notspec\",\n          email: \"Notspec\",\n          name: \"Notspec\"\n      }\n        this.changeQuestion = this.changeQuestion.bind(this);\n        this.changeContacts = this.changeContacts.bind(this);\n      }\n      \n      changeQuestion = (field, value) => {\n        console.log(field);\n        console.log(value);\n        //if(field === \"fuzzy\") {\n        //this.setState({fur: value});\n        console.log(this.state.fur);\n        //} else if (field === \"pet\") {\n       // this.setState({pet: value});\n       // console.log(value);\n      //  } else {\n         //   console.log(value);\n        //};\n\n  };\n\n\n\n  changeContacts = (name,email) => {\n    this.setState({\n        name: name,\n        email: email\n    });\n  }\n    \n    render(){\n        return (<div>\n        <form method=\"post\" action=\"http://server1\">\n            {questions.map(question =>  <RenderQuestion onClick = {this.changeQuestion()} number = {this.state} question = {question}/>)}\n            <br/>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form> </div>);\n    }\n};\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}