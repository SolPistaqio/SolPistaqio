{"ast":null,"code":"import React from 'react';\n\nclass GetAPIDataForCity extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getVenues = async () => {\n      const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n      const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n      const url = 'https://api.foursquare.com/v2/venues/explore?near='; //const city = $input.val();\n\n      const urlToFetch = url + this.state.city + '&limit=10&client_id=' + clientId + '&client_secret=' + clientSecret + '&v=20200225';\n\n      try {\n        const response = await fetch(urlToFetch);\n\n        if (response.ok) {\n          const jsonResponse = await response.json();\n          const venues = jsonResponse.response.groups[0].items.map(item => item.venue);\n          console.log(venues);\n          return venues;\n        }\n\n        throw new Error('Request failed!');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getForecast = async () => {\n      const openWeatherKey = '24baa893cee78ee225eca9d32759df14';\n      const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather'; //const city = $input.val();\n\n      const urlToFetch = weatherUrl + '?q=' + this.state.city + '&APPID=' + openWeatherKey;\n\n      try {\n        const response = await fetch(urlToFetch);\n\n        if (response.ok) {\n          const jsonResponse = await response.json();\n          console.log(jsonResponse);\n          return jsonResponse;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.state = {\n      city: 'Malta'\n    };\n  }\n\n}\n\nexport default GetAPIDataForCity;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/parks.js"],"names":["React","GetAPIDataForCity","Component","constructor","props","getVenues","clientId","clientSecret","url","urlToFetch","state","city","response","fetch","ok","jsonResponse","json","venues","groups","items","map","item","venue","console","log","Error","error","getForecast","openWeatherKey","weatherUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,SARmB,GAQP,YAAS;AACjB,YAAMC,QAAQ,GAAG,kDAAjB;AACA,YAAMC,YAAY,GAAG,kDAArB;AACA,YAAMC,GAAG,GAAG,oDAAZ,CAHiB,CAIjB;;AACA,YAAMC,UAAU,GAAGD,GAAG,GAAG,KAAKE,KAAL,CAAWC,IAAjB,GAAwB,sBAAxB,GAAgDL,QAAhD,GAA2D,iBAA3D,GAA6EC,YAA7E,GAA0F,aAA7G;;AACA,UAAG;AACD,cAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACJ,UAAD,CAA5B;;AACA,YAAIG,QAAQ,CAACE,EAAb,EAAiB;AACf,gBAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACA,gBAAMC,MAAM,GAAGF,YAAY,CAACH,QAAb,CAAsBM,MAAtB,CAA6B,CAA7B,EAAgCC,KAAhC,CAAsCC,GAAtC,CAA0CC,IAAI,IAAIA,IAAI,CAACC,KAAvD,CAAf;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,iBAAOA,MAAP;AACD;;AAAC,cAAM,IAAIQ,KAAJ,CAAU,iBAAV,CAAN;AACH,OARD,CASA,OAAMC,KAAN,EAAY;AACVH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,KA1BgB;;AAAA,SA4BjBC,WA5BiB,GA4BH,YAAW;AACvB,YAAMC,cAAc,GAAG,kCAAvB;AACA,YAAMC,UAAU,GAAG,iDAAnB,CAFuB,CAGvB;;AACA,YAAMpB,UAAU,GAAGoB,UAAU,GAAE,KAAZ,GAAkB,KAAKnB,KAAL,CAAWC,IAA7B,GAAkC,SAAlC,GAA4CiB,cAA/D;;AACA,UAAG;AACH,cAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACJ,UAAD,CAA5B;;AACE,YAAIG,QAAQ,CAACE,EAAb,EAAiB;AAChB,gBAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACCO,UAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACA,iBAAOA,YAAP;AACD;AACJ,OAPC,CAQA,OAAMW,KAAN,EAAa;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,KA5CgB;;AAEf,SAAKhB,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAGD;;AANwC;;AAiD/C,eAAeV,iBAAf","sourcesContent":["import React from 'react';\n\nclass GetAPIDataForCity extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            city : 'Malta'\n      };\n      }\n\n\n    getVenues = async()=>{\n        const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n        const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n        const url = 'https://api.foursquare.com/v2/venues/explore?near=';\n        //const city = $input.val();\n        const urlToFetch = url + this.state.city + '&limit=10&client_id='+ clientId + '&client_secret='+clientSecret+'&v=20200225';\n        try{\n          const response = await fetch(urlToFetch)\n          if (response.ok) {\n            const jsonResponse = await response.json();\n            const venues = jsonResponse.response.groups[0].items.map(item => item.venue);\n            console.log(venues);\n            return venues\n          } throw new Error('Request failed!')\n        }\n        catch(error){\n          console.log(error)\n        }\n      };\n      \n      getForecast = async() => {\n        const openWeatherKey = '24baa893cee78ee225eca9d32759df14';\n        const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather';\n        //const city = $input.val();\n        const urlToFetch = weatherUrl +'?q='+this.state.city+'&APPID='+openWeatherKey;\n        try{\n        const response = await fetch(urlToFetch);\n          if (response.ok) {\n           const jsonResponse = await response.json();\n            console.log(jsonResponse);\n            return jsonResponse;\n          }\n      }\n        catch(error) {\n          console.log(error)\n        }\n      }\n}\n\n\nexport default GetAPIDataForCity;\n"]},"metadata":{},"sourceType":"module"}