{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/parks.js\";\nimport React from 'react';\nimport { getVenues, getForecast, getPhotos } from './apisearch.js';\n\nclass RenderWalk extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: 'Riga',\n      venues: [],\n      forecast: {},\n      searched: false,\n      pic: ''\n    };\n    this.handleData = this.handleData.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleData(e) {\n    console.log(e.target.value);\n    const searchCity = e.target.value;\n    this.setState({\n      city: searchCity\n    });\n  }\n\n  search(city) {\n    console.log('searching for ' + city);\n    this.setState({\n      searched: false,\n      venues: []\n    });\n    getVenues(city).then(vResult => {\n      if (vResult !== undefined && vResult !== {}) {\n        this.setState({\n          venues: vResult,\n          searched: true\n        });\n      } else {\n        this.setState({\n          venues: []\n        });\n        alert('Please try entering city again');\n      }\n    }); //this doesn't work\n\n    console.log('getting forecast');\n    getForecast(city).then(vResult => {\n      if (vResult.weather[0]) {\n        this.setState({\n          forecast: vResult\n        });\n      }\n    });\n  }\n\n  handleEnter(e) {\n    //e.preventDefault();\n    if (e.key === 'Enter') {\n      console.log('search on Enter'); // this.search(this.state.city);\n    } else {\n      console.log('other key');\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.search(this.state.city);\n  }\n\n  render() {\n    if (this.state.searched) {\n      console.log(this.state.venues);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleData,\n        onKeyPress: this.handleEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Search\"), React.createElement(RenderVenue, {\n        venues: this.state.venues,\n        forecast: this.state.forecast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Search\"));\n    }\n  }\n\n}\n\n;\n\nclass RenderPark extends React.Component {\n  render() {\n    console.log('all parks incoming');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.venues.map(park => {\n      const href = 'https://maps.google.com/?q=' + park.location.lat + ',' + park.location.lng;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" \", park.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" \", park.categories[0].name), React.createElement(\"a\", {\n        href: href,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Directions\"));\n    }));\n  }\n\n}\n\nclass RenderWeather extends React.Component {\n  timeConverter(UNIX_timestamp) {\n    const a = new Date(UNIX_timestamp * 1000);\n    const hour = a.getHours();\n    const min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\n    const time = hour + ':' + min;\n    return time;\n  }\n\n  render() {\n    console.log(this.props.weather);\n\n    if (this.props.weather) {\n      const src = 'https://openweathermap.org/img/wn/' + this.props.weather.weather[0].icon + '@2x.png';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: src,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.props.weather.weather[0].main), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Temperature: \", Math.floor(this.props.weather.main.temp - 273.15), \"C\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Sunset \", this.timeConverter(this.props.weather.sys.sunset), \" PM\"));\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Weather report is not available for this city\");\n    }\n  }\n\n}\n\n;\n\nclass RenderVenue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pic: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log('here comes the photo!');\n    getPhotos(this.props.venues[0].id).then(pResult => this.setState({\n      pic: pResult\n    }));\n  }\n\n  render() {\n    //const src = 'https://openweathermap.org/img/wn/'+this.props.forecast.weather[0].icon+'@2x.png';\n    const href = 'https://maps.google.com/?q=' + this.props.venues[0].location.lat + ',' + this.props.venues[0].location.lng;\n    const photo = this.props.venues[0].photo;\n    const city = this.props.venues[0].location.city;\n    console.log(this.props.forecast);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, city, \" \"), React.createElement(RenderWeather, {\n      weather: this.props.forecast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.pic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(RenderPark, {\n      venues: this.props.venues,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\n;\nexport default RenderWalk;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/parks.js"],"names":["React","getVenues","getForecast","getPhotos","RenderWalk","Component","constructor","props","state","city","venues","forecast","searched","pic","handleData","bind","handleClick","e","console","log","target","value","searchCity","setState","search","then","vResult","undefined","alert","weather","handleEnter","key","preventDefault","render","RenderPark","map","park","href","location","lat","lng","name","categories","RenderWeather","timeConverter","UNIX_timestamp","a","Date","hour","getHours","min","getMinutes","time","src","icon","main","Math","floor","temp","sys","sunset","RenderVenue","componentDidMount","id","pResult","photo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {getVenues, getForecast, getPhotos} from './apisearch.js';\n\n\nclass RenderWalk extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            city : 'Riga',\n            venues : [],\n            forecast : {},\n            searched: false,\n            pic: ''\n      };\n      this.handleData=this.handleData.bind(this);\n      this.handleClick=this.handleClick.bind(this);\n      }\n      handleData(e){\n        console.log(e.target.value);\n        const searchCity = e.target.value;\n        this.setState({\n            city: searchCity\n        });\n      }\n\n      search(city){\n        console.log('searching for ' + city);\n       \n        this.setState({\n            searched: false,\n            venues : [],\n              })\n        \n        getVenues(city).then(vResult => {\n            if (vResult !== undefined && vResult !== {}){\n       this.setState({\n           venues : vResult, \n           searched: true,\n             })}\n            else {\n                this.setState({\n                    venues : [],\n                      })\n                alert('Please try entering city again');\n            \n        }});\n        //this doesn't work\n        console.log('getting forecast');\n        getForecast(city).then(vResult =>\n            {\n                if(vResult.weather[0])\n            {this.setState({\n                forecast : vResult\n                  })\n                }});\n      }\n      \n      handleEnter(e){\n        //e.preventDefault();\n         if (e.key === 'Enter') {\n             console.log('search on Enter');\n           // this.search(this.state.city);\n          } else {\n            console.log('other key');\n          }\n      }\n      \n      handleClick(e){ \n        e.preventDefault();\n        this.search(this.state.city);\n           \n      }\n      \n    render(){\n\n        if(this.state.searched) {\n            console.log(this.state.venues);\n            return <div> \n                <input onChange={this.handleData} onKeyPress={this.handleEnter}/>\n            <button onClick={this.handleClick}>Search</button>\n                <RenderVenue  venues={this.state.venues} forecast = {this.state.forecast}/>\n            </div>\n        } else {\n            return (<div>\n            <input onChange={this.handleData} />\n            <button onClick={this.handleClick}>Search</button>\n            </div>)\n    }}\n\n};\n\nclass RenderPark extends React.Component {\n    render(){\n        console.log('all parks incoming')\n        return (<div>\n            {this.props.venues.map(park => {\n                const href = 'https://maps.google.com/?q=' +park.location.lat+ ','+ park.location.lng; \n                return <div> \n                <p> {park.name}</p>\n                <p> {park.categories[0].name}</p>\n                <a href={href} target='_blank' >Directions</a>\n                </div>\n            })}\n        </div>)\n    \n}}\n\nclass RenderWeather extends React.Component {\n    timeConverter(UNIX_timestamp){\n        const a = new Date(UNIX_timestamp * 1000);\n        const hour = a.getHours();\n        const min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes(); \n        const time = hour + ':' + min;\n        return time;\n      }\n    \n    render(){\n        console.log(this.props.weather);\n        if(this.props.weather){\n            const src = 'https://openweathermap.org/img/wn/'+this.props.weather.weather[0].icon+'@2x.png';\n            return ( <div>\n                <img src={src} />\n       <p>{this.props.weather.weather[0].main}</p>\n       <p>Temperature: {Math.floor(this.props.weather.main.temp- 273.15)}C</p>\n       <p>Sunset {this.timeConverter(this.props.weather.sys.sunset)} PM</p>\n\n            </div>\n            )\n        }else{\n            return <p>Weather report is not available for this city</p>\n        }\n    }\n};\n\nclass RenderVenue extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            pic: ''\n      }\n    }\n\n   \n      \n      componentDidMount(){\n        console.log('here comes the photo!')\n        getPhotos(this.props.venues[0].id).then(pResult =>\n            this.setState({\n                pic : pResult\n                  }));\n      }\n        \nrender(){\n    //const src = 'https://openweathermap.org/img/wn/'+this.props.forecast.weather[0].icon+'@2x.png';\n    const href = 'https://maps.google.com/?q=' +this.props.venues[0].location.lat+ ','+ this.props.venues[0].location.lng;\n    const photo = this.props.venues[0].photo;\n    const city = this.props.venues[0].location.city;\n   console.log(this.props.forecast);\n   \n    \n    return <div>\n    <h3>{city} </h3>\n    <RenderWeather weather={this.props.forecast}/>\n       <table>\n        <tbody>\n        <tr>\n        <td><img src={this.state.pic} /></td>\n        <td>\n         \n       <RenderPark venues={this.props.venues}/>\n        </td>\n        </tr>\n        </tbody>\n        </table>  \n    </div>\n}\n};\nexport default RenderWalk;\n"]},"metadata":{},"sourceType":"module"}