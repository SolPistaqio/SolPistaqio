{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/game/grid.js\";\nimport React from 'react';\nimport './game.css';\nconst bad = ['0x1F354', '0x1F35F', '0x1F355', '0x1F96E', '0x1F361', '0x1F366', '0x1F369', '0x1F36A', '0x1F9C1', '0x1F36C'];\nconst good = ['0x1F957', '0x1F966', '0x1F96C', '0x1F952', '0x1F955', '0x1F346', '0x1F951', '0x1F345', '0x1F363', '0x1F360'];\nconst location = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\nfunction getItemsNeeded(level) {\n  console.log('the level is ' + level);\n  const start = 4;\n  let neededItems = 5;\n\n  if (level < 6) {\n    neededItems = start + level;\n  } else if (level < 8) {\n    neededItems = level + 2;\n  } else if (level < 10) {\n    neededItems = level - 3;\n  } else {\n    return 9;\n  }\n\n  console.log('we will have ' + neededItems + ' items this round');\n  return neededItems;\n}\n\nfunction getNumberOfBad(level) {\n  if (level < 6) {\n    return level + 2;\n  } else if (level < 8) {\n    return level - 2;\n  } else {\n    return Math.floor(Math.random() * Math.floor(6)) + 1;\n  }\n}\n\nfunction getRandomRange(itemsNeeded, max) {\n  let range = [];\n\n  while (range.length < itemsNeeded) {\n    const randomNumber = Math.floor(Math.random() * Math.floor(max));\n    if (range.indexOf(randomNumber) === -1) range.push(randomNumber);\n  }\n\n  return range;\n}\n\nclass AffectionCouner extends React.Component {\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Your affection level is \", this.props.affection);\n  }\n\n}\n\nclass FoodItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFoodChoise = this.handleFoodChoise.bind(this);\n  }\n\n  handleFoodChoise(e) {\n    console.log('you made your choice ' + this.props.foodItem.fType);\n    this.props.foodChoise(this.props.foodItem);\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      onClick: this.handleFoodChoise,\n      role: \"image\",\n      className: this.props.locations[this.props.food.indexOf(this.props.foodItem)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, String.fromCodePoint(this.props.foodItem.pic));\n  }\n\n}\n\nclass Gamefield extends React.Component {\n  getfood(itemsNeeded, level) {\n    const badN = getNumberOfBad(level);\n    const goodN = itemsNeeded - badN;\n    console.log('from ' + itemsNeeded + ' number of items you get ' + goodN + ' of good and ' + badN + ' of bad');\n    let food = []; //get good food\n\n    const goodRange = getRandomRange(goodN, 10);\n    goodRange.forEach(index => food.push({\n      pic: good[index],\n      fType: 'good'\n    })); //add bad food\n\n    const badRange = getRandomRange(badN, 10);\n    badRange.forEach(index => food.push({\n      pic: bad[index],\n      fType: 'bad'\n    }));\n    console.log(food);\n    return food;\n  }\n\n  getLocation(itemsNeeded) {\n    const range = getRandomRange(itemsNeeded, 9);\n    let locations = [];\n    range.forEach(index => {\n      locations.push(location[index]);\n    });\n    console.log(locations);\n    return locations;\n  }\n\n  render() {\n    const level = this.props.level;\n    const itemsQ = getItemsNeeded(level);\n    const food = this.getfood(itemsQ, level);\n    const locations = this.getLocation(itemsQ);\n    const affection = Math.abs(this.props.affection);\n\n    if (level < 10 && affection < 3) {\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, food.map(foodItem => {\n        return React.createElement(FoodItem, {\n          foodChoise: this.props.foodChoise,\n          key: foodItem.pic,\n          food: food,\n          locations: locations,\n          foodItem: foodItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        });\n      }));\n    } else if (affection >= 3) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Spinat is not going to be your friend\");\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Spinat is not going to be your friend\");\n    }\n  }\n\n}\n\nexport default Gamefield;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/game/grid.js"],"names":["React","bad","good","location","getItemsNeeded","level","console","log","start","neededItems","getNumberOfBad","Math","floor","random","getRandomRange","itemsNeeded","max","range","length","randomNumber","indexOf","push","AffectionCouner","Component","render","props","affection","FoodItem","constructor","handleFoodChoise","bind","e","foodItem","fType","foodChoise","locations","food","String","fromCodePoint","pic","Gamefield","getfood","badN","goodN","goodRange","forEach","index","badRange","getLocation","itemsQ","abs","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,GAAG,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,EAAmD,SAAnD,EAA6D,SAA7D,EAAuE,SAAvE,EAAiF,SAAjF,EAA2F,SAA3F,CAAZ;AACA,MAAMC,IAAI,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,EAAmD,SAAnD,EAA6D,SAA7D,EAAuE,SAAvE,EAAiF,SAAjF,EAA2F,SAA3F,CAAb;AACA,MAAMC,QAAQ,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAc,OAAd,EAAsB,MAAtB,EAA6B,MAA7B,EAAoC,KAApC,EAA0C,OAA1C,EAAkD,OAAlD,EAA0D,MAA1D,CAAjB;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,KAA9B;AACA,QAAMG,KAAK,GAAG,CAAd;AACA,MAAIC,WAAW,GAAG,CAAlB;;AACA,MAAIJ,KAAK,GAAC,CAAV,EAAY;AACRI,IAAAA,WAAW,GAAGD,KAAK,GAAGH,KAAtB;AACH,GAFD,MAEO,IAAIA,KAAK,GAAC,CAAV,EAAY;AACfI,IAAAA,WAAW,GAAGJ,KAAK,GAAG,CAAtB;AACH,GAFM,MAEA,IAAIA,KAAK,GAAC,EAAV,EAAc;AACjBI,IAAAA,WAAW,GAAGJ,KAAK,GAAG,CAAtB;AACH,GAFM,MAEA;AACH,WAAO,CAAP;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBE,WAAhB,GAA6B,mBAAzC;AACA,SAAOA,WAAP;AAEH;;AAED,SAASC,cAAT,CAAyBL,KAAzB,EAA+B;AAC3B,MAAIA,KAAK,GAAC,CAAV,EAAY;AACR,WAAOA,KAAK,GAAG,CAAf;AACH,GAFD,MAEO,IAAIA,KAAK,GAAC,CAAV,EAAa;AAChB,WAAOA,KAAK,GAAG,CAAf;AACH,GAFM,MAEA;AACH,WAAOM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,IAA4C,CAAnD;AACH;AACJ;;AAED,SAASE,cAAT,CAAyBC,WAAzB,EAAsCC,GAAtC,EAA0C;AACtC,MAAIC,KAAK,GAAG,EAAZ;;AACA,SAAMA,KAAK,CAACC,MAAN,GAAaH,WAAnB,EAAgC;AAChC,UAAMI,YAAY,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWI,GAAX,CAA3B,CAArB;AACA,QAAGC,KAAK,CAACG,OAAN,CAAcD,YAAd,MAAgC,CAAC,CAApC,EAAuCF,KAAK,CAACI,IAAN,CAAWF,YAAX;AACtC;;AACD,SAAOF,KAAP;AACH;;AAED,MAAMK,eAAN,SAA8BtB,KAAK,CAACuB,SAApC,CAA6C;AAC7CC,EAAAA,MAAM,GAAE;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA4B,KAAKC,KAAL,CAAWC,SAAvC,CAAP;AACC;;AAH4C;;AAK7C,MAAMC,QAAN,SAAuB3B,KAAK,CAACuB,SAA7B,CAAsC;AAClCK,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACf,UAAMA,KAAN;AACR,SAAKI,gBAAL,GAAsB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAtB;AACO;;AAEHD,EAAAA,gBAAgB,CAACE,CAAD,EAAG;AACfzB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0B,KAAKkB,KAAL,CAAWO,QAAX,CAAoBC,KAA1D;AACA,SAAKR,KAAL,CAAWS,UAAX,CAAsB,KAAKT,KAAL,CAAWO,QAAjC;AAGH;;AACLR,EAAAA,MAAM,GAAE;AACJ,WAAQ;AAAO,MAAA,OAAO,EAAE,KAAKK,gBAArB;AAAuC,MAAA,IAAI,EAAC,OAA5C;AAAqD,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWU,SAAX,CAAqB,KAAKV,KAAL,CAAWW,IAAX,CAAgBhB,OAAhB,CAAwB,KAAKK,KAAL,CAAWO,QAAnC,CAArB,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqIK,MAAM,CAACC,aAAP,CAAqB,KAAKb,KAAL,CAAWO,QAAX,CAAoBO,GAAzC,CAArI,CAAR;AACH;;AAdqC;;AAkBtC,MAAMC,SAAN,SAAwBxC,KAAK,CAACuB,SAA9B,CAAuC;AAEnCkB,EAAAA,OAAO,CAAC1B,WAAD,EAAcV,KAAd,EAAqB;AACxB,UAAMqC,IAAI,GAAGhC,cAAc,CAACL,KAAD,CAA3B;AACA,UAAMsC,KAAK,GAAG5B,WAAW,GAAG2B,IAA5B;AACApC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAQQ,WAAR,GAAoB,2BAApB,GAAgD4B,KAAhD,GAAuD,eAAvD,GAAuED,IAAvE,GAA6E,SAAzF;AAEA,QAAIN,IAAI,GAAG,EAAX,CALwB,CAMxB;;AACA,UAAMQ,SAAS,GAAG9B,cAAc,CAAC6B,KAAD,EAAQ,EAAR,CAAhC;AACAC,IAAAA,SAAS,CAACC,OAAV,CAAkBC,KAAK,IACnBV,IAAI,CAACf,IAAL,CACI;AAACkB,MAAAA,GAAG,EAAErC,IAAI,CAAC4C,KAAD,CAAV;AACAb,MAAAA,KAAK,EAAE;AADP,KADJ,CADJ,EARwB,CAexB;;AACA,UAAMc,QAAQ,GAAGjC,cAAc,CAAC4B,IAAD,EAAO,EAAP,CAA/B;AACAK,IAAAA,QAAQ,CAACF,OAAT,CAAiBC,KAAK,IAClBV,IAAI,CAACf,IAAL,CACI;AAACkB,MAAAA,GAAG,EAAEtC,GAAG,CAAC6C,KAAD,CAAT;AACAb,MAAAA,KAAK,EAAE;AADP,KADJ,CADJ;AAMA3B,IAAAA,OAAO,CAACC,GAAR,CAAY6B,IAAZ;AACA,WAAOA,IAAP;AAEH;;AAEDY,EAAAA,WAAW,CAAEjC,WAAF,EAAc;AACrB,UAAME,KAAK,GAAGH,cAAc,CAACC,WAAD,EAAc,CAAd,CAA5B;AACA,QAAIoB,SAAS,GAAG,EAAhB;AACAlB,IAAAA,KAAK,CAAC4B,OAAN,CAAcC,KAAK,IAAG;AAClBX,MAAAA,SAAS,CAACd,IAAV,CAAelB,QAAQ,CAAC2C,KAAD,CAAvB;AACH,KAFD;AAGAxC,IAAAA,OAAO,CAACC,GAAR,CAAY4B,SAAZ;AACA,WAAOA,SAAP;AACH;;AAEDX,EAAAA,MAAM,GAAE;AACJ,UAAMnB,KAAK,GAAG,KAAKoB,KAAL,CAAWpB,KAAzB;AACA,UAAM4C,MAAM,GAAG7C,cAAc,CAACC,KAAD,CAA7B;AACA,UAAM+B,IAAI,GAAG,KAAKK,OAAL,CAAaQ,MAAb,EAAqB5C,KAArB,CAAb;AACA,UAAM8B,SAAS,GAAG,KAAKa,WAAL,CAAiBC,MAAjB,CAAlB;AACA,UAAMvB,SAAS,GAAGf,IAAI,CAACuC,GAAL,CAAS,KAAKzB,KAAL,CAAWC,SAApB,CAAlB;;AAEA,QAAIrB,KAAK,GAAE,EAAP,IAAaqB,SAAS,GAAG,CAA7B,EAA+B;AAC/B,aAAS;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJU,IAAI,CAACe,GAAL,CAASnB,QAAQ,IAAI;AAElB,eAAO,oBAAC,QAAD;AAAU,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWS,UAAjC;AAA6C,UAAA,GAAG,EAAGF,QAAQ,CAACO,GAA5D;AAAiE,UAAA,IAAI,EAAEH,IAAvE;AAA6E,UAAA,SAAS,EAAED,SAAxF;AAAmG,UAAA,QAAQ,EAAEH,QAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,OAJA,CADI,CAAT;AAOQ,KARR,MASK,IAAGN,SAAS,IAAE,CAAd,EAAiB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAP;AACH,KAFI,MAEE;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAP;AACH;AACJ;;AA7DkC;;AAgEvC,eAAec,SAAf","sourcesContent":["import React from 'react';\nimport './game.css'\n\nconst bad = ['0x1F354','0x1F35F','0x1F355','0x1F96E','0x1F361','0x1F366','0x1F369','0x1F36A','0x1F9C1','0x1F36C'];\nconst good = ['0x1F957','0x1F966','0x1F96C','0x1F952','0x1F955','0x1F346','0x1F951','0x1F345','0x1F363','0x1F360'];\nconst location = ['one', 'two','three','four','five','six','seven','eight','nine']\n\n\nfunction getItemsNeeded(level) {\n    console.log('the level is ' + level)\n    const start = 4;\n    let neededItems = 5;\n    if (level<6){\n        neededItems = start + level;\n    } else if (level<8){\n        neededItems = level + 2\n    } else if (level<10) {\n        neededItems = level - 3\n    } else {\n        return 9\n    }\n    console.log('we will have '+neededItems+ ' items this round');\n    return neededItems\n    \n}\n\nfunction getNumberOfBad (level){\n    if (level<6){\n        return level + 2\n    } else if (level<8) {\n        return level - 2\n    } else {\n        return Math.floor(Math.random() * Math.floor(6)) + 1\n    }\n}\n\nfunction getRandomRange (itemsNeeded, max){\n    let range = [];\n    while(range.length<itemsNeeded) {\n    const randomNumber = Math.floor(Math.random() * Math.floor(max));\n    if(range.indexOf(randomNumber) === -1) range.push(randomNumber);\n    }\n    return range\n}\n\nclass AffectionCouner extends React.Component{\nrender(){\nreturn <p>Your affection level is {this.props.affection}</p>\n}\n}\nclass FoodItem extends React.Component{\n    constructor(props) {\n        super(props);\nthis.handleFoodChoise=this.handleFoodChoise.bind(this); \n      }\n\n    handleFoodChoise(e){\n        console.log('you made your choice ' + this.props.foodItem.fType)\n        this.props.foodChoise(this.props.foodItem)\n\n        \n    }\nrender(){\n    return (<span  onClick={this.handleFoodChoise} role=\"image\"  className={this.props.locations[this.props.food.indexOf(this.props.foodItem)]}>{String.fromCodePoint(this.props.foodItem.pic)}</span>)\n}\n}\n\n\nclass Gamefield extends React.Component{\n    \n    getfood(itemsNeeded, level) {\n        const badN = getNumberOfBad(level);\n        const goodN = itemsNeeded - badN;\n        console.log('from '+itemsNeeded+' number of items you get '+goodN+ ' of good and '+badN+ ' of bad')\n\n        let food = [];\n        //get good food\n        const goodRange = getRandomRange(goodN, 10);\n        goodRange.forEach(index=>\n            food.push(\n                {pic: good[index],\n                fType: 'good'}\n                )\n            )\n        \n        //add bad food\n        const badRange = getRandomRange(badN, 10);\n        badRange.forEach(index=>\n            food.push(\n                {pic: bad[index],\n                fType: 'bad'}\n                )\n            )\n        console.log(food);\n        return food\n        \n    }\n\n    getLocation (itemsNeeded){\n        const range = getRandomRange(itemsNeeded, 9);\n        let locations = [];\n        range.forEach(index=> {\n            locations.push(location[index])\n        })\n        console.log(locations);\n        return locations\n    }\n    \n    render(){\n        const level = this.props.level;\n        const itemsQ = getItemsNeeded(level);\n        const food = this.getfood(itemsQ, level);\n        const locations = this.getLocation(itemsQ);\n        const affection = Math.abs(this.props.affection);\n\n        if (level <10 && affection < 3){\n        return  (<div className='grid'>\n            {food.map(foodItem => {\n                \n                return <FoodItem foodChoise={this.props.foodChoise} key ={foodItem.pic} food={food} locations={locations} foodItem={foodItem}/>\n                \n            })}\n\n        </div>)}\n        else if(affection>=3) {\n            return <p>Spinat is not going to be your friend</p>\n        } else {\n            return <p>Spinat is not going to be your friend</p>\n        }\n    }\n}\n\nexport default Gamefield;\n\n\n\n"]},"metadata":{},"sourceType":"module"}