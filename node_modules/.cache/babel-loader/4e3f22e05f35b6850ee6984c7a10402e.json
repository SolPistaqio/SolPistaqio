{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/parks.js\";\nimport React from 'react';\n\nclass GetAPIDataForCity extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getVenues = async city => {\n      const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n      const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n      const url = 'https://api.foursquare.com/v2/venues/explore?near='; //const city = $input.val();\n\n      const urlToFetch = url + city + '&limit=50&client_id=' + clientId + '&client_secret=' + clientSecret + '&v=20200225';\n\n      try {\n        const response = await fetch(urlToFetch);\n\n        if (response.ok) {\n          const jsonResponse = await response.json();\n          const venues = jsonResponse.response.groups[0].items.map(item => item.venue); //console.log(venues);\n\n          return venues;\n        }\n\n        throw new Error('Request failed!');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getForecast = async city => {\n      const openWeatherKey = '24baa893cee78ee225eca9d32759df14';\n      const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather'; //const city = $input.val();\n\n      const urlToFetch = weatherUrl + '?q=' + city + '&APPID=' + openWeatherKey;\n\n      try {\n        const response = await fetch(urlToFetch);\n\n        if (response.ok) {\n          const jsonResponse = await response.json(); //console.log(jsonResponse);\n\n          return jsonResponse;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(RenderWalk, {\n      getForecast: this.getForecast,\n      getVenues: this.getVenues,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\n\nclass RenderWalk extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: 'Malta',\n      venues: [],\n      forecast: {}\n    };\n    this.handleData = this.handleData.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleData(e) {\n    console.log(e.target.value);\n    const searchCity = e.target.value;\n    this.setState({\n      city: searchCity\n    });\n  }\n\n  handleClick(e) {\n    console.log(e.target.value);\n    this.props.getForecast(this.state.city).then(vResult => this.setState({\n      forecast: vResult\n    }));\n    console.log(this.state.forecast);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default GetAPIDataForCity;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/parks.js"],"names":["React","GetAPIDataForCity","Component","getVenues","city","clientId","clientSecret","url","urlToFetch","response","fetch","ok","jsonResponse","json","venues","groups","items","map","item","venue","Error","error","console","log","getForecast","openWeatherKey","weatherUrl","render","RenderWalk","constructor","props","state","forecast","handleData","bind","handleClick","e","target","value","searchCity","setState","then","vResult"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass GetAPIDataForCity extends React.Component{\n    \n    getVenues = async(city)=>{\n        const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n        const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n        const url = 'https://api.foursquare.com/v2/venues/explore?near=';\n        //const city = $input.val();\n        const urlToFetch = url + city + '&limit=50&client_id='+ clientId + '&client_secret='+clientSecret+'&v=20200225';\n        try{\n          const response =  await fetch(urlToFetch)\n          if (response.ok) {\n            const jsonResponse = await response.json();\n            const venues = jsonResponse.response.groups[0].items.map(item => item.venue);\n            //console.log(venues);\n            return venues\n          } throw new Error('Request failed!')\n        }\n        catch(error){\n          console.log(error)\n        }\n      };\n      \n      getForecast = async(city) => {\n        const openWeatherKey = '24baa893cee78ee225eca9d32759df14';\n        const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather';\n        //const city = $input.val();\n        const urlToFetch = weatherUrl +'?q='+city+'&APPID='+openWeatherKey;\n        try{\n        const response = await fetch(urlToFetch);\n          if (response.ok) {\n           const jsonResponse = await response.json();\n            //console.log(jsonResponse);\n            return jsonResponse;\n          }\n      }\n        catch(error) {\n          console.log(error)\n        }\n      }\n\n      \n\n      render(){\n        \n      return <RenderWalk getForecast={this.getForecast} getVenues={this.getVenues}/>\n      }\n};\n\nclass RenderWalk extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            city : 'Malta',\n            venues : [],\n            forecast : {}\n      };\n      this.handleData=this.handleData.bind(this);\n      this.handleClick=this.handleClick.bind(this);\n      }\n      handleData(e){\n        console.log(e.target.value);\n        const searchCity = e.target.value;\n        this.setState({\n            city: searchCity\n        });\n      }\n      handleClick(e){\n        console.log(e.target.value); \n        this.props.getForecast(this.state.city).then(vResult => this.setState({\n            forecast : vResult,  \n              }))\n           console.log(this.state.forecast)\n      }\n    render(){\n        return <div>\n            <input onChange={this.handleData} />\n            <button onClick={this.handleClick}>Search</button>\n            <p>{}</p>        \n\n            </div>\n    }\n\n};\nexport default GetAPIDataForCity;\n"]},"metadata":{},"sourceType":"module"}