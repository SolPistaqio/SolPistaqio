{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js\";\nimport React, { Component } from 'react';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { defaults } from 'react-chartjs-2';\nimport { render } from '@testing-library/react';\nconst apiKey = 'H02HDVYAO5KH6A0E';\nconst sample = {\n  'Meta Data': {\n    Information: \"Daily Prices and Volumes for Digital Currency\",\n    'Digital Currency Code': \"ETH\",\n    'Digital Currency Name': \"Ethereum\",\n    'Market Code': \"USD\",\n    'Market Name': \"United States Dollar\",\n    'Last Refreshed': \"2020-04-10 00:00:00\",\n    'Time Zone': \"UTC\"\n  },\n  'Time Series (Digital Currency Daily)': {\n    '2020-04-10': {\n      '1a. open (USD)': \"169.56000000\"\n    },\n    '2020-04-09': {\n      '1a. open (USD)': \"173.15000000\"\n    },\n    '2020-04-08': {\n      '1a. open (USD)': \"164.62000000\"\n    }\n  }\n};\n\nfunction getStockdata(crypto, currency) {\n  const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=' + crypto + '&market=' + currency + '&apikey=' + apiKey;\n  fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Request failed!');\n  }, networkError => {\n    console.log(networkError.message);\n  }).then(jsonResponse => {\n    console.log(jsonResponse);\n    return jsonResponse;\n  });\n}\n\n;\n\nclass Infograph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: Object.keys(sample['Time Series (Digital Currency Daily)']).reverse(),\n        datasets: [{\n          label: sample['Meta Data']['Digital Currency Name'],\n          data: Object.values(sample['Time Series (Digital Currency Daily)']).map(value => {\n            return value['1a. open (USD)'];\n          }).reverse()\n        }]\n      }\n    };\n  }\n\n  render() {\n    console.log(); // getStockdata('ETH','USD');\n\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          display: true,\n          text: sample['Meta Data']['Market Name'] + '/' + sample['Meta Data']['Digital Currency Name'],\n          fontSize: 25\n        },\n        legend: {\n          display: false,\n          position: 'left'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Infograph;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js"],"names":["React","Component","Line","Bar","Pie","defaults","render","apiKey","sample","Information","getStockdata","crypto","currency","url","fetch","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","Infograph","constructor","props","state","chartData","labels","Object","keys","reverse","datasets","label","data","values","map","value","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { defaults } from 'react-chartjs-2';\nimport { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\n\nconst sample = {\n    'Meta Data':\n    {Information: \"Daily Prices and Volumes for Digital Currency\",\n    'Digital Currency Code': \"ETH\",\n    'Digital Currency Name': \"Ethereum\",\n    'Market Code': \"USD\",\n    'Market Name': \"United States Dollar\",\n    'Last Refreshed': \"2020-04-10 00:00:00\",\n    'Time Zone': \"UTC\"},\n'Time Series (Digital Currency Daily)':\n    {'2020-04-10': {'1a. open (USD)': \"169.56000000\"},\n    '2020-04-09': {'1a. open (USD)': \"173.15000000\"},\n    '2020-04-08':{'1a. open (USD)': \"164.62000000\"}}\n};\n\n\n\nfunction getStockdata(crypto ,currency) {\n    const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol='+crypto+'&market='+currency+'&apikey=' + apiKey\n    fetch(url).then(response => {\n        if (response.ok) {\n          return response.json()\n        } \n          throw new Error('Request failed!');\n        \n      }, networkError => {\n        console.log(networkError.message)\n      }).then(jsonResponse=>{\n        console.log(jsonResponse);\n        return jsonResponse\n      })};\n\n\nclass Infograph extends Component {\nconstructor (props) {\n    super(props);\n    this.state = {\n        chartData: {\n           labels:  Object. keys(sample['Time Series (Digital Currency Daily)']).reverse(),\n           datasets: [{\n            label: sample['Meta Data']['Digital Currency Name'],\n            data: Object.values(sample['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open (USD)']}).reverse(),\n           } ]\n        }\n    }\n}\nrender() {\n    console.log();\n  // getStockdata('ETH','USD');\n    return (\n        <div className=\"chart\">\n            <Line \n                data= {this.state.chartData}\n            \n                options = {{\n                    title: {\n                        display: true,\n                        text: sample['Meta Data']['Market Name']+'/'+sample['Meta Data']['Digital Currency Name'],\n                        fontSize: 25\n                    },\n                    legend: {\n                       display: false,\n                       position: 'left'\n                    }\n                }}\n            \n            \n            />\n        </div>\n    )\n}\n};\n\nexport default Infograph;"]},"metadata":{},"sourceType":"module"}