{"ast":null,"code":"import React from 'react';\n\nfunction getVenues(city) {\n  const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n  const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n  const url = 'https://api.foursquare.com/v2/venues/explore?near='; //const city = $input.val();\n\n  const urlToFetch = url + city + '&limit=50&client_id=' + clientId + '&client_secret=' + clientSecret + '&v=20200225';\n  fetch(urlToFetch).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Request failed!');\n  }, networkError => {\n    console.log(networkError.message);\n  }).then(response => {\n    if (response.response.groups[0]) {\n      const venues = response.response.groups[0].items.map(item => item.venue); //console.log(venues);\n\n      return venues;\n    }\n  });\n}\n\n;\n\nclass GetAPIDataForCity extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getForecast = async city => {\n      const openWeatherKey = '24baa893cee78ee225eca9d32759df14';\n      const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather'; //const city = $input.val();\n\n      const urlToFetch = weatherUrl + '?q=' + city + '&APPID=' + openWeatherKey;\n\n      try {\n        const response = await fetch(urlToFetch);\n\n        if (response.ok) {\n          const jsonResponse = await response.json(); //console.log(jsonResponse);\n\n          return jsonResponse;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n}\n\n;\nexport default getVenues;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/apisearch.js"],"names":["React","getVenues","city","clientId","clientSecret","url","urlToFetch","fetch","then","response","ok","json","Error","networkError","console","log","message","groups","venues","items","map","item","venue","GetAPIDataForCity","Component","getForecast","openWeatherKey","weatherUrl","jsonResponse","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,QAAMC,QAAQ,GAAG,kDAAjB;AACA,QAAMC,YAAY,GAAG,kDAArB;AACA,QAAMC,GAAG,GAAG,oDAAZ,CAHuB,CAIvB;;AACA,QAAMC,UAAU,GAAGD,GAAG,GAAGH,IAAN,GAAa,sBAAb,GAAqCC,QAArC,GAAgD,iBAAhD,GAAkEC,YAAlE,GAA+E,aAAlG;AACAG,EAAAA,KAAK,CAACD,UAAD,CAAL,CAAkBE,IAAlB,CAAuBC,QAAQ,IAAI;AAC/B,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AAAC,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACjB;;AACC,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AAEH,GALH,EAKKC,YAAY,IAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,OAAzB;AACD,GAPH,EAOKR,IAPL,CAOUC,QAAQ,IAAE;AAChB,QAAGA,QAAQ,CAACA,QAAT,CAAkBQ,MAAlB,CAAyB,CAAzB,CAAH,EAA+B;AAC3B,YAAMC,MAAM,GAAGT,QAAQ,CAACA,QAAT,CAAkBQ,MAAlB,CAAyB,CAAzB,EAA4BE,KAA5B,CAAkCC,GAAlC,CAAsCC,IAAI,IAAIA,IAAI,CAACC,KAAnD,CAAf,CAD2B,CAE/B;;AACA,aAAOJ,MAAP;AAAc;AACf,GAZH;AAcK;;AAAA;;AAIP,MAAMK,iBAAN,SAAgCvB,KAAK,CAACwB,SAAtC,CAA+C;AAAA;AAAA;;AAAA,SAEzCC,WAFyC,GAE3B,MAAMvB,IAAN,IAAe;AAC3B,YAAMwB,cAAc,GAAG,kCAAvB;AACA,YAAMC,UAAU,GAAG,iDAAnB,CAF2B,CAG3B;;AACA,YAAMrB,UAAU,GAAGqB,UAAU,GAAE,KAAZ,GAAkBzB,IAAlB,GAAuB,SAAvB,GAAiCwB,cAApD;;AACA,UAAG;AACH,cAAMjB,QAAQ,GAAG,MAAMF,KAAK,CAACD,UAAD,CAA5B;;AACE,YAAIG,QAAQ,CAACC,EAAb,EAAiB;AAChB,gBAAMkB,YAAY,GAAG,MAAMnB,QAAQ,CAACE,IAAT,EAA3B,CADgB,CAEf;;AACA,iBAAOiB,YAAP;AACD;AACJ,OAPC,CAQA,OAAMC,KAAN,EAAa;AACXf,QAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD;AACF,KAlBwC;AAAA;;AAAA;;AAoB9C;AAGD,eAAe5B,SAAf","sourcesContent":["import React from 'react';\n\nfunction getVenues(city) {\n  const clientId = 'JR4J5UNKZQLHYDALGZA2FO2LUSNZRNKXZ5O5K2TWVST3PEYZ';\n  const clientSecret = 'OOEWMJ4EWHA3G1ABVY42QXLIXJ1XGN0UHWUTC05J0HXOOK5H';\n  const url = 'https://api.foursquare.com/v2/venues/explore?near=';\n  //const city = $input.val();\n  const urlToFetch = url + city + '&limit=50&client_id='+ clientId + '&client_secret='+clientSecret+'&v=20200225';\n  fetch(urlToFetch).then(response => {\n      if (response.ok) {return response.json()\n      } \n        throw new Error('Request failed!');\n      \n    }, networkError => {\n      console.log(networkError.message)\n    }).then(response=>{\n      if(response.response.groups[0]){\n          const venues = response.response.groups[0].items.map(item => item.venue);\n      //console.log(venues);\n      return venues}\n    })\n          \n      };\n\n\n\nclass GetAPIDataForCity extends React.Component{\n      \n      getForecast = async(city) => {\n        const openWeatherKey = '24baa893cee78ee225eca9d32759df14';\n        const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather';\n        //const city = $input.val();\n        const urlToFetch = weatherUrl +'?q='+city+'&APPID='+openWeatherKey;\n        try{\n        const response = await fetch(urlToFetch);\n          if (response.ok) {\n           const jsonResponse = await response.json();\n            //console.log(jsonResponse);\n            return jsonResponse;\n          }\n      }\n        catch(error) {\n          console.log(error)\n        }\n      }\n\n};\n\n\nexport default getVenues;\n"]},"metadata":{},"sourceType":"module"}