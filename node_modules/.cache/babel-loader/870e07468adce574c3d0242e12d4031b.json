{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js\";\nimport React from 'react';\nlet questions = [{\n  title: 'Do you like warm and fuzzy pets?',\n  display: true,\n  type: \"radio\",\n  name: \"fuzzy\",\n  id: 1,\n  options: [{\n    idAndValue: 'yes',\n    label: \"Yes\"\n  }, {\n    idAndValue: 'no',\n    label: \"No\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 2,\n  options: [{\n    idAndValue: 'dog',\n    label: \"Dog\"\n  }, {\n    idAndValue: 'hamster',\n    label: \"Hamster\"\n  }, {\n    idAndValue: 'cat',\n    label: \"Cat\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 3,\n  options: [{\n    idAndValue: 'pig',\n    label: \"Pig\"\n  }, {\n    idAndValue: 'lizard',\n    label: \"Lizard\"\n  }, {\n    idAndValue: 'snake',\n    label: \"Snake\"\n  }]\n}, {\n  title: 'What is your name?',\n  display: false,\n  type: 'text',\n  name: 'name',\n  id: 4,\n  options: [{\n    idAndValue: 'name',\n    label: \"Name\"\n  }]\n}, {\n  title: 'What is your email?',\n  display: false,\n  type: 'text',\n  name: 'email',\n  id: 5,\n  options: [{\n    idAndValue: 'emal',\n    label: \"Email\"\n  }]\n}];\n\nclass RenderQuestionOption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    // console.log(e.target);\n    const value = e.target.value;\n    const field = e.target.name;\n    this.props.changeQuestion(field, value);\n  }\n\n  handleContactChange(e) {\n    console.log(e.target.value);\n    console.log(e.target.name);\n  }\n\n  render() {\n    let option = this.props.option;\n    let question = this.props.question;\n\n    if (question.type !== 'text') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        key: question.id,\n        onClick: this.handleChange,\n        type: question.type,\n        id: option.idAndValue,\n        name: question.name,\n        value: option.idAndValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: option.idAndValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, option.label));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        key: question.id,\n        onChange: this.handleContactChange,\n        type: question.type,\n        id: option.idAndValue,\n        name: question.name //value={option.idAndValue}  \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: option.idAndValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, option.label));\n    }\n  }\n\n}\n\n;\n\nclass RenderOptions extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.options.options.map(option => React.createElement(RenderQuestionOption, {\n      changeQuestion: this.props.changeQuestion,\n      question: this.props.options,\n      option: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nclass RenderQuestion extends React.Component {\n  render() {\n    if (this.props.number.fur === \"Notspec\" && this.props.question.id === 1) {\n      console.log(this.props.number);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    } else if (this.props.number.fur === \"yes\" && this.props.question.id === 2) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    } else if (this.props.number.fur === \"no\" && this.props.question.id === 3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    } else if (this.props.number.pet !== \"Notspec\" && this.props.question.id > 3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        changeQuestion: this.props.changeQuestion,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\n;\n\nclass SubmitData extends React.Component {\n  render() {\n    if (this.props.data.fur !== 'Notspec' && this.props.data.pet !== \"Notspec\") {\n      return React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fur: 'Notspec',\n      question: 1,\n      pet: \"Notspec\",\n      email: \"Notspec\",\n      name: \"Notspec\",\n      submitted: false\n    };\n    this.changeQuestion = this.changeQuestion.bind(this);\n    this.changeContacts = this.changeContacts.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  changeQuestion(field, value) {\n    if (field === \"fuzzy\") {\n      this.setState({\n        fur: value\n      });\n    } else if (field === \"pet\") {\n      this.setState({\n        pet: value\n      });\n    } else {\n      console.log(value);\n    }\n\n    ;\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(e.target);\n    this.setState({\n      submitted: true\n    });\n  }\n\n  changeContacts(name, email) {\n    this.setState({\n      name: name,\n      email: email\n    });\n  }\n\n  render() {\n    if (this.state.submitted === false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, questions.map(question => React.createElement(RenderQuestion, {\n        changeQuestion: this.changeQuestion,\n        number: this.state,\n        question: question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(SubmitData, {\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), \" \");\n    } else {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Okay, \", this.state.name, \"! Check your email for important message from \", this.state.pet, \"s\");\n    }\n  }\n\n}\n\n;\nexport default Test;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js"],"names":["React","questions","title","display","type","name","id","options","idAndValue","label","RenderQuestionOption","Component","constructor","props","handleChange","bind","e","value","target","field","changeQuestion","handleContactChange","console","log","render","option","question","RenderOptions","map","RenderQuestion","number","fur","pet","SubmitData","data","Test","state","email","submitted","changeContacts","handleSubmit","setState","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\n\nlet questions = [\n    { title : 'Do you like warm and fuzzy pets?',\n     display: true,\n     type: \"radio\",\n     name: \"fuzzy\",\n     id: 1,\n     options: [{\n         idAndValue: 'yes',\n         label: \"Yes\"\n     }, {\n         idAndValue: 'no',\n         label: \"No\"\n     }]},\n     {title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 2,\n     options: [{\n         idAndValue: 'dog',\n         label: \"Dog\"\n     }, {\n         idAndValue: 'hamster',\n         label: \"Hamster\"\n     }, \n     {\n         idAndValue: 'cat',\n         label: \"Cat\"\n     }]},{\n     title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 3,\n     options: [{\n         idAndValue: 'pig',\n         label: \"Pig\"\n     }, {\n         idAndValue: 'lizard',\n         label: \"Lizard\"\n     }, \n     {\n         idAndValue: 'snake',\n         label: \"Snake\"\n     }]},\n     {\n         title: 'What is your name?',\n         display: false,\n         type: 'text',\n         name: 'name',\n         id: 4,\n         options: [{\n         idAndValue: 'name',\n         label: \"Name\"\n         }]\n     },\n     {\n         title: 'What is your email?',\n         display: false,\n         type: 'text',\n         name: 'email',\n         id: 5,\n         options: [{\n         idAndValue: 'emal',\n         label: \"Email\"\n         }]\n     }\n ];\n\n class RenderQuestionOption extends React.Component {\n    constructor(props) {\n        super(props);\nthis.handleChange=this.handleChange.bind(this) \n      }\n\n    handleChange(e) {\n       // console.log(e.target);\n        const value = e.target.value;\n       const field = e.target.name;\n      this.props.changeQuestion(field,value);\n      }\n\n    handleContactChange (e) {\n        console.log(e.target.value);\n        console.log(e.target.name);\n    }\n     render (){\n         let option = this.props.option;\n         let question = this.props.question;\n         if (question.type !== 'text')\n       { return (<div>\n          <input key = {question.id} onClick = {this.handleChange} type={question.type} id={option.idAndValue} name={question.name} value={option.idAndValue}  />\n         <label for={option.idAndValue}>{option.label}</label> \n        </div>)} else {\n            return(<div>\n            <input key = {question.id} onChange = {this.handleContactChange} type={question.type} id={option.idAndValue} name={question.name} \n            //value={option.idAndValue}  \n            />\n            <label for={option.idAndValue}>{option.label}</label> \n            </div>)\n        }\n     }\n };\n\n class RenderOptions extends React.Component {\n    render () {\n        return (<div> \n            {this.props.options.options.map(option => <RenderQuestionOption changeQuestion = {this.props.changeQuestion} question = {this.props.options} option = {option}/>)}\n            </div>\n            )\n    \n    }\n };\n class RenderQuestion extends React.Component {\n    render (){\n        if (this.props.number.fur === \"Notspec\" && this.props.question.id === 1){\n            console.log(this.props.number);\n        return (<div>\n        <p>{this.props.question.title}</p>\n            <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n            </div>\n            )} else if (this.props.number.fur === \"yes\" && this.props.question.id === 2){\n                return <div>\n                <p>{this.props.question.title}</p>\n                    <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                    </div>\n            }\n         else if (this.props.number.fur === \"no\" && this.props.question.id === 3){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                </div>\n        } else if (this.props.number.pet !== \"Notspec\" && this.props.question.id >3 ){\n            return <div>\n            <p>{this.props.question.title}</p>\n                <RenderOptions changeQuestion = {this.props.changeQuestion} options = {this.props.question}/>\n                </div>\n        } else {\n            return <div></div>\n        }\n        \n      }\n        \n};\n\nclass SubmitData extends React.Component {\n    \n    \n    render(){\n        if(this.props.data.fur !== 'Notspec' && this.props.data.pet !== \"Notspec\")\n        {return (\n            <input type=\"submit\" value=\"Submit\"/>\n        )} else {\n            return (\n                <div></div>\n            )\n        }\n    }\n}\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fur: 'Notspec',\n          question: 1,\n          pet: \"Notspec\",\n          email: \"Notspec\",\n          name: \"Notspec\",\n          submitted: false\n      };\n        this.changeQuestion = this.changeQuestion.bind(this);\n        this.changeContacts = this.changeContacts.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n      \n      changeQuestion(field, value) {\n        \n        if(field === \"fuzzy\") {\n        this.setState({fur: value});\n        \n        } else if (field === \"pet\") {\n       this.setState({pet: value});\n       \n      } else {\n      console.log(value);\n       };\n\n  };\n\n  handleSubmit(e){\n    e.preventDefault();\n    console.log(e.target);\n    this.setState({\n        submitted: true \n    })\n  }\n\n  changeContacts(name,email) {\n   this.setState({\n      name: name,\n     email: email\n     });\n  }\n    \n    render(){\n        if(this.state.submitted === false){\n        return (<div>\n        <form onSubmit={this.handleSubmit}>\n            {questions.map(question =>  <RenderQuestion changeQuestion = {this.changeQuestion} number = {this.state} question = {question}/>)}\n            <br/>\n            <SubmitData data = {this.state} />\n        </form> </div>);} else {\n       return (<h3>Okay, {this.state.name}! Check your email for important message from {this.state.pet}s</h3>)\n        }\n    }\n};\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}