{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2'; //import { defaults } from 'react-chartjs-2';\n//import { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\nconst numberNeeded = 20;\n\nfunction getStockdata(crypto, currency, numberNeeded) {\n  const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=' + crypto + '&market=' + currency + '&apikey=' + apiKey;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Request failed!');\n  }, networkError => {\n    console.log(networkError.message);\n  }).then(jsonResponse => {\n    //console.log(jsonResponse);\n    const data = {\n      labels: Object.keys(jsonResponse['Time Series (Digital Currency Daily)']).reverse().slice(-numberNeeded),\n      label: jsonResponse['Meta Data']['3. Digital Currency Name'],\n      data: Object.values(jsonResponse['Time Series (Digital Currency Daily)']).map(value => {\n        return value['1a. open (' + jsonResponse['Meta Data']['4. Market Code'] + ')'];\n      }).reverse().slice(-numberNeeded).map(value => {\n        return parseFloat(value);\n      }),\n      text: jsonResponse['Meta Data']['5. Market Name'] + '/' + jsonResponse['Meta Data']['3. Digital Currency Name']\n    };\n    return data;\n  });\n}\n\n;\n\nclass Infograph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 50,\n      crypto: 'ETH',\n      currency: 'EUR'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDayChange = this.handleDayChange.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.search(this.state.crypto, this.state.currency, this.state.days);\n  }\n\n  handleDayChange(e) {\n    //console.log(e.target.name);\n    const newValue = e.target.value;\n    const category = e.target.name;\n\n    if (category === 'days') {\n      this.setState({\n        days: newValue\n      });\n    } else if (category === 'crypto') {\n      this.setState({\n        crypto: newValue\n      });\n    } else if (category === 'currency') {\n      this.setState({\n        currency: newValue\n      });\n    }\n  }\n\n  render() {\n    const crypto = ['ETH', 'BTC', 'TRX', 'BNB', 'XRP', 'BCH', 'LTC', 'NEO'];\n    const currency = ['EUR', 'USD', 'RUB', 'CNY'];\n    const choseCrypto = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, crypto.map(crypto => {\n      if (crypto === this.state.crypto) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onClick: this.handleDayChange,\n          type: \"radio\",\n          id: crypto,\n          name: \"crypto\",\n          value: crypto,\n          defaultChecked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: crypto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, crypto));\n      } else {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onClick: this.handleDayChange,\n          type: \"radio\",\n          id: crypto,\n          name: \"crypto\",\n          value: crypto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: crypto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, crypto));\n      }\n    }));\n    const choseDays = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"3 \", React.createElement(\"input\", {\n      onClick: this.handleDayChange,\n      type: \"range\",\n      id: \"days\",\n      name: \"days\",\n      step: \"1\",\n      min: \"3\",\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"100 \"), React.createElement(\"label\", {\n      for: \"days\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Show for \", this.state.days, \" days\"));\n    const choseCurrency = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, currency.map(currency => {\n      if (currency === this.state.currency) {\n        labelKey = 'l' + {\n          currency\n        };\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          key: currency,\n          onClick: this.handleDayChange,\n          type: \"radio\",\n          id: currency,\n          name: \"currency\",\n          value: currency,\n          defaultChecked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          key: labelKey,\n          for: currency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, currency));\n      } else {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          key: currency,\n          onClick: this.handleDayChange,\n          type: \"radio\",\n          id: currency,\n          name: \"currency\",\n          value: currency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          key: labelKey,\n          for: currency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, currency));\n      }\n    }));\n    const data = {\n      labels: this.props.data.labels,\n      datasets: [{\n        label: this.props.data.label,\n        data: this.props.data.data\n      }]\n    };\n\n    if (this.props.show) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Crypto vs Fiat per day chart\"), React.createElement(Line, {\n        data: data,\n        options: {\n          title: {\n            display: true,\n            text: this.props.data.text,\n            fontSize: 25\n          },\n          legend: {\n            display: false,\n            position: 'left'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Choose currencies and time period you want to see\"), choseDays, choseCrypto, choseCurrency, React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Get data\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Crypto vs Fiat per day chart\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Choose currencies and time period you want to see\"), choseDays, choseCrypto, choseCurrency, React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Get data\"));\n    }\n  }\n\n}\n\n;\n\nclass Coolchart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      display: false\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleSearch(crypto, currency, numberNeeded) {\n    return getStockdata(crypto, currency, numberNeeded).then(response => this.setState({\n      data: response,\n      display: true\n    }));\n  }\n\n  render() {\n    //console.log(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Infograph, {\n      show: this.state.display,\n      data: this.state.data,\n      search: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Coolchart;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Infograph/infograph.js"],"names":["React","Component","Line","apiKey","numberNeeded","getStockdata","crypto","currency","url","fetch","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","data","labels","Object","keys","reverse","slice","label","values","map","value","parseFloat","text","Infograph","constructor","props","state","days","handleClick","bind","handleDayChange","e","search","newValue","target","category","name","setState","render","choseCrypto","choseDays","choseCurrency","labelKey","datasets","show","title","display","fontSize","legend","position","Coolchart","handleSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Line} from 'react-chartjs-2';\n//import { defaults } from 'react-chartjs-2';\n//import { render } from '@testing-library/react';\n\nconst apiKey = 'H02HDVYAO5KH6A0E';\n\nconst numberNeeded = 20;\n\n\n\nfunction getStockdata(crypto ,currency, numberNeeded) {\n    const url = 'https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol='+crypto+'&market='+currency+'&apikey=' + apiKey\n    return fetch(url).then(response => {\n        if (response.ok) {\n          return response.json()\n        } \n          throw new Error('Request failed!');\n        \n      }, networkError => {\n        console.log(networkError.message)\n      }).then(jsonResponse=>{\n       //console.log(jsonResponse);\n         \n        const data = \n        {labels: Object.keys(jsonResponse['Time Series (Digital Currency Daily)'])\n        .reverse()\n        .slice(-numberNeeded),\n        label: jsonResponse['Meta Data']['3. Digital Currency Name'],\n        data: Object.values(jsonResponse['Time Series (Digital Currency Daily)']).map(value => {return value['1a. open ('+jsonResponse['Meta Data']['4. Market Code']+')']}).\n        reverse().\n        slice(-numberNeeded).map(\n                value => {return parseFloat(value)}),\n        text : jsonResponse['Meta Data']['5. Market Name']+'/'+jsonResponse['Meta Data']['3. Digital Currency Name'],\n        }\n        return data\n        \n      })};\n\n\nclass Infograph extends Component {\nconstructor (props) {\n    super(props);\n    this.state = {\n        days:50,\n        crypto: 'ETH',\n        currency: 'EUR'\n    }\n    \nthis.handleClick=this.handleClick.bind(this);\nthis.handleDayChange=this.handleDayChange.bind(this)\n\n}\n\nhandleClick(e){\n    this.props.search(this.state.crypto,this.state.currency, this.state.days)\n}\n\nhandleDayChange(e){\n    //console.log(e.target.name);\n    const newValue = e.target.value;\n    const category = e.target.name;\n    if (category === 'days'){\n    this.setState({\n        days:newValue\n    })} else if (category === 'crypto'){\n        this.setState({\n            crypto:newValue\n        })\n    } else if (category === 'currency'){\n        this.setState({\n            currency:newValue\n        })\n    }\n}\n\n\nrender() {\n\n  const crypto = ['ETH', 'BTC', 'TRX',  'BNB', 'XRP', 'BCH', 'LTC', 'NEO'];\n  const currency = ['EUR', 'USD', 'RUB', 'CNY'];\n\n  const choseCrypto = \n  <div>\n      {crypto.map(crypto => {\n        if(crypto === this.state.crypto){\n       return (<span>\n       <input onClick={this.handleDayChange} type=\"radio\" id={crypto} name=\"crypto\" value={crypto} defaultChecked></input>\n       <label for={crypto}>{crypto}</label>\n       </span>\n       )} else { return (<span>\n        <input onClick={this.handleDayChange} type=\"radio\" id={crypto} name=\"crypto\" value={crypto}></input>\n        <label for={crypto}>{crypto}</label>\n        </span>\n        )\n       } \n      })}\n  </div>;\n\n  const choseDays = <div>\n   <p>3 <input onClick={this.handleDayChange} type=\"range\" id=\"days\" name=\"days\" step=\"1\" min=\"3\" max=\"100\"></input>100 </p>\n    <label for=\"days\">Show for {this.state.days} days</label>\n \n  </div>;\n\nconst choseCurrency =\n<div>\n{currency.map(currency => {\n        if(currency === this.state.currency){\n        labelKey = 'l' + {currency};\n       return (<span>\n       <input key={currency} onClick={this.handleDayChange} type=\"radio\" id={currency} name=\"currency\" value={currency} defaultChecked></input>\n       <label key={labelKey} for={currency}>{currency}</label>\n       </span>\n       )} else { return (<span>\n        <input key={currency} onClick={this.handleDayChange} type=\"radio\" id={currency} name=\"currency\" value={currency}></input>\n       <label key={labelKey} for={currency}>{currency}</label>\n        </span>\n        )\n       } \n      })}\n\n  </div>;\n\n  const data = {\n    labels:  this.props.data.labels,\n    datasets: [{\n        label: this.props.data.label, \n        data: this.props.data.data,\n    } ]\n}\n  if (this.props.show) { \n  return (\n        <div className=\"chart\">\n        <h1>Crypto vs Fiat per day chart</h1>\n            <Line \n                data= {data}\n            \n                options = {{\n                    title: {\n                        display: true,\n                        text: this.props.data.text,\n                        fontSize: 25\n                    },\n                    legend: {\n                       display: false,\n                       position: 'left'\n                    }\n                }}\n            \n            \n            />\n            <p>Choose currencies and time period you want to see</p>\n            {choseDays}\n            {choseCrypto}\n            {choseCurrency}\n            <button onClick={this.handleClick}>Get data</button>\n        </div>)}\n    else {return (<div>\n        <h1>Crypto vs Fiat per day chart</h1>\n        <p>Choose currencies and time period you want to see</p>\n        {choseDays}\n        {choseCrypto}\n        {choseCurrency}\n    <button onClick={this.handleClick}>Get data</button>\n    </div>\n    )}\n}\n};\n\nclass Coolchart extends React.Component{\n    constructor (props) {\n        super(props);\n        this.state = {\n            data: {},\n            display: false\n        }\n    this.handleSearch = this.handleSearch.bind(this)\n    }\n    handleSearch(crypto ,currency, numberNeeded){\n      return getStockdata(crypto ,currency,numberNeeded).then(response => this.setState({\n           data: response,\n           display: true\n       }))\n    }\n    render() {\n    //console.log(this.state.data);\n      return ( <div>\n      <Infograph show={this.state.display} data={this.state.data} search={this.handleSearch}/>\n      </div>\n      )\n    }\n}\nexport default Coolchart;"]},"metadata":{},"sourceType":"module"}