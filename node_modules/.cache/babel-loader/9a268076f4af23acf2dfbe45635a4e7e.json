{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js\";\nimport React from 'react';\nlet questions = [{\n  title: 'Do you like warm and fuzzy pets?',\n  display: true,\n  type: \"radio\",\n  name: \"fuzzy\",\n  options: [{\n    idAndValue: 'fuzzy',\n    label: \"Yes\"\n  }, {\n    idAndValue: 'nofuz',\n    label: \"No\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  options: [{\n    idAndValue: 'dog',\n    label: \"Dog\"\n  }, {\n    idAndValue: 'hamster',\n    label: \"Hamster\"\n  }, {\n    idAndValue: 'cat',\n    label: \"Cat\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  options: [{\n    idAndValue: 'pig',\n    label: \"Pig\"\n  }, {\n    idAndValue: 'lizard',\n    label: \"Lizard\"\n  }, {\n    idAndValue: 'snake',\n    label: \"Snake\"\n  }]\n}, {\n  title: 'What is your name?',\n  display: false,\n  type: 'text',\n  name: 'name',\n  options: [{\n    idAndValue: 'name',\n    label: \"Name\"\n  }]\n}, {\n  title: 'What is your email?',\n  display: false,\n  type: 'text',\n  name: 'email',\n  options: [{\n    idAndValue: 'emal',\n    label: \"Email\"\n  }]\n}];\n\nclass RenderQuestionOption extends React.Component {\n  render() {\n    let option = this.props.option;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: option.type,\n      id: option.options.idAndValue,\n      name: option.name,\n      value: option.options.idAndValue,\n      onClick: this.changeQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: option.options.idAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, option.options.label));\n  }\n\n}\n\n;\n\nclass RenderOptions extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"this.props.options.map(option => \", React.createElement(RenderQuestionOption, {\n      option: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \")\");\n  }\n\n}\n\n;\n\nclass RenderQuestion extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.question.title), React.createElement(RenderOptions, {\n      options: this.props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeQuestion = () => {\n      let qn = this.state.question + 1;\n      this.setState({\n        question: qn\n      });\n    };\n\n    this.state = {\n      fur: true,\n      question: 1,\n      pet: \"dog\",\n      email: \"tranqvilier@gmail.com\",\n      name: \"Sol\"\n    }; //this.changeQuestion = this.changeQuestion.bind(this);\n    //this.changeFur = this.changeFur.bind(this);\n    //this.changePet = this.changePet.bind(this);\n    //this.changeMail = this.changeMail.bind(this);\n    //this.changeName = this.changeName.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"http://server1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, questions.map(question => React.createElement(RenderQuestion, {\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), \" \");\n  }\n\n}\n\n;\nexport default Test;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js"],"names":["React","questions","title","display","type","name","options","idAndValue","label","RenderQuestionOption","Component","render","option","props","changeQuestion","RenderOptions","RenderQuestion","question","Test","constructor","qn","state","setState","fur","pet","email","map"],"mappings":"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","sourcesContent":["import React from 'react';\n\nlet questions = [\n    { title : 'Do you like warm and fuzzy pets?',\n     display: true,\n     type: \"radio\",\n     name: \"fuzzy\",\n     options: [{\n         idAndValue: 'fuzzy',\n         label: \"Yes\"\n     }, {\n         idAndValue: 'nofuz',\n         label: \"No\"\n     }]},\n     {title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     options: [{\n         idAndValue: 'dog',\n         label: \"Dog\"\n     }, {\n         idAndValue: 'hamster',\n         label: \"Hamster\"\n     }, \n     {\n         idAndValue: 'cat',\n         label: \"Cat\"\n     }]},{\n     title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     options: [{\n         idAndValue: 'pig',\n         label: \"Pig\"\n     }, {\n         idAndValue: 'lizard',\n         label: \"Lizard\"\n     }, \n     {\n         idAndValue: 'snake',\n         label: \"Snake\"\n     }]},\n     {\n         title: 'What is your name?',\n         display: false,\n         type: 'text',\n         name: 'name',\n         options: [{\n         idAndValue: 'name',\n         label: \"Name\"\n         }]\n     },\n     {\n         title: 'What is your email?',\n         display: false,\n         type: 'text',\n         name: 'email',\n         options: [{\n         idAndValue: 'emal',\n         label: \"Email\"\n         }]\n     }\n ];\n\n class RenderQuestionOption extends React.Component {\n     render (){\n         let option = this.props.option;\n        return (<div>\n        <input type={option.type} id={option.options.idAndValue} name={option.name} value={option.options.idAndValue} onClick = {this.changeQuestion} />\n        <label for={option.options.idAndValue}>{option.options.label}</label> \n        </div>)\n     }\n };\n\n class RenderOptions extends React.Component {\n    render () {\n        return (<div> \n            this.props.options.map(option => <RenderQuestionOption option = {option}/>)\n            </div>\n            )\n    \n    }\n };\n class RenderQuestion extends React.Component {\n    render (){\n        return (<div>\n        <p>{this.props.question.title}</p>\n            <RenderOptions options = {this.props.question}/>\n            </div>\n            )\n        \n      }\n        \n};\n\n\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fur: true,\n          question: 1,\n          pet: \"dog\",\n          email: \"tranqvilier@gmail.com\",\n          name: \"Sol\"\n      };\n        //this.changeQuestion = this.changeQuestion.bind(this);\n        //this.changeFur = this.changeFur.bind(this);\n        //this.changePet = this.changePet.bind(this);\n        //this.changeMail = this.changeMail.bind(this);\n        //this.changeName = this.changeName.bind(this);\n      }\n      \n      changeQuestion = () => {\n        let qn = this.state.question + 1;\n        this.setState({question: qn});\n  };\n    \n    render(){\n        return (<div>\n        <form method=\"post\" action=\"http://server1\">\n            {questions.map(question =>  <RenderQuestion question = {question}/>)}\n            <br/>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form> </div>);\n    }\n};\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}