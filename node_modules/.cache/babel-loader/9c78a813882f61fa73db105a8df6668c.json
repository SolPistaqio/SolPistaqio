{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/game/grid.js\";\nimport React from 'react';\nimport './game.css';\nconst bad = ['0x1F354', '0x1F35F', '0x1F355', '0x1F96E', '0x1F361', '0x1F366', '0x1F369', '0x1F36A', '0x1F9C1', '0x1F36C'];\nconst good = ['0x1F957', '0x1F966', '0x1F96C', '0x1F952', '0x1F955', '0x1F346', '0x1F951', '0x1F345', '0x1F363', '0x1F360'];\nconst location = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\nconst itemsNeeded = 5;\n\nclass Gamefield extends React.Component {\n  getfood(type, itemsNeeded) {\n    const randomNumber = Math.floor(Math.random() * Math.floor(10));\n    let food = [];\n    let i = 0;\n\n    while (i < itemsNeeded) {\n      food.push(type[randomNumber]);\n      i++;\n    }\n\n    return food;\n  }\n\n  getLocation(itemsNeeded) {\n    const randomNumber = Math.floor(Math.random() * Math.floor(9));\n    let locations = [];\n    let i = 0;\n\n    while (i < itemsNeeded) {\n      locations.push(location[randomNumber]);\n      i++;\n    }\n\n    return locations;\n  }\n\n  render() {\n    const food = this.getfood('good', itemsNeeded);\n    const locations = this.getLocation(itemsNeeded);\n    return React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, food.map(function renderField(foodItem) {\n      return React.createElement(\"span\", {\n        role: \"image\",\n        className: locations[food.indexOf(foodItem)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, String.fromCodePoint(foodItem));\n    }));\n  }\n\n}\n\nexport default Gamefield;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/game/grid.js"],"names":["React","bad","good","location","itemsNeeded","Gamefield","Component","getfood","type","randomNumber","Math","floor","random","food","i","push","getLocation","locations","render","map","renderField","foodItem","indexOf","String","fromCodePoint"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,GAAG,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,EAAmD,SAAnD,EAA6D,SAA7D,EAAuE,SAAvE,EAAiF,SAAjF,EAA2F,SAA3F,CAAZ;AACA,MAAMC,IAAI,GAAG,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,EAAmD,SAAnD,EAA6D,SAA7D,EAAuE,SAAvE,EAAiF,SAAjF,EAA2F,SAA3F,CAAb;AACA,MAAMC,QAAQ,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAc,OAAd,EAAsB,MAAtB,EAA6B,MAA7B,EAAoC,KAApC,EAA0C,OAA1C,EAAkD,OAAlD,EAA0D,MAA1D,CAAjB;AACA,MAAMC,WAAW,GAAG,CAApB;;AAGA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAuC;AACnCC,EAAAA,OAAO,CAACC,IAAD,EAAOJ,WAAP,EAAoB;AACvB,UAAMK,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,EAAX,CAA3B,CAArB;AACA,QAAIE,IAAI,GAAG,EAAX;AACA,QAAIC,CAAC,GAAE,CAAP;;AACA,WAAMA,CAAC,GAACV,WAAR,EAAoB;AAChBS,MAAAA,IAAI,CAACE,IAAL,CAAUP,IAAI,CAACC,YAAD,CAAd;AACAK,MAAAA,CAAC;AACJ;;AACD,WAAOD,IAAP;AAEH;;AAEDG,EAAAA,WAAW,CAAEZ,WAAF,EAAc;AACrB,UAAMK,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B,CAArB;AACA,QAAIM,SAAS,GAAG,EAAhB;AACA,QAAIH,CAAC,GAAE,CAAP;;AACA,WAAMA,CAAC,GAACV,WAAR,EAAoB;AAChBa,MAAAA,SAAS,CAACF,IAAV,CAAeZ,QAAQ,CAACM,YAAD,CAAvB;AACAK,MAAAA,CAAC;AACJ;;AACD,WAAOG,SAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAML,IAAI,GAAG,KAAKN,OAAL,CAAa,MAAb,EAAqBH,WAArB,CAAb;AACA,UAAMa,SAAS,GAAG,KAAKD,WAAL,CAAiBZ,WAAjB,CAAlB;AACA,WAAS;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJS,IAAI,CAACM,GAAL,CAAS,SAASC,WAAT,CAAqBC,QAArB,EAA8B;AACpC,aAAO;AAAM,QAAA,IAAI,EAAC,OAAX;AAAoB,QAAA,SAAS,EAAEJ,SAAS,CAACJ,IAAI,CAACS,OAAL,CAAaD,QAAb,CAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmEE,MAAM,CAACC,aAAP,CAAqBH,QAArB,CAAnE,CAAP;AACH,KAFA,CADI,CAAT;AAMH;;AAjCkC;;AAoCvC,eAAehB,SAAf","sourcesContent":["import React from 'react';\nimport './game.css'\n\nconst bad = ['0x1F354','0x1F35F','0x1F355','0x1F96E','0x1F361','0x1F366','0x1F369','0x1F36A','0x1F9C1','0x1F36C'];\nconst good = ['0x1F957','0x1F966','0x1F96C','0x1F952','0x1F955','0x1F346','0x1F951','0x1F345','0x1F363','0x1F360'];\nconst location = ['one', 'two','three','four','five','six','seven','eight','nine']\nconst itemsNeeded = 5;\n\n\nclass Gamefield extends React.Component{\n    getfood(type, itemsNeeded) {\n        const randomNumber = Math.floor(Math.random() * Math.floor(10));\n        let food = [];\n        let i =0;\n        while(i<itemsNeeded){\n            food.push(type[randomNumber])\n            i++\n        }\n        return food\n        \n    }\n\n    getLocation (itemsNeeded){\n        const randomNumber = Math.floor(Math.random() * Math.floor(9));\n        let locations = [];\n        let i =0;\n        while(i<itemsNeeded){\n            locations.push(location[randomNumber])\n            i++\n        }\n        return locations\n    }\n    \n    render(){\n        const food = this.getfood('good', itemsNeeded);\n        const locations = this.getLocation(itemsNeeded);\n        return  (<div className='grid'>\n            {food.map(function renderField(foodItem){\n                return <span role=\"image\"  className={locations[food.indexOf(foodItem)]}>{String.fromCodePoint(foodItem)}</span>\n            })}\n\n        </div>)\n    }\n}\n\nexport default Gamefield;\n\n\n\n"]},"metadata":{},"sourceType":"module"}