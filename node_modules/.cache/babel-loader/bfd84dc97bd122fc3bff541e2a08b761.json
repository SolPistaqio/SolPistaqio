{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/parks.js\";\nimport React from 'react';\nimport { getVenues, getForecast } from './apisearch.js';\n\nclass RenderWalk extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: 'Malta',\n      venues: [],\n      forecast: {},\n      searched: false\n    };\n    this.handleData = this.handleData.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleData(e) {\n    console.log(e.target.value);\n    const searchCity = e.target.value;\n    this.setState({\n      city: searchCity\n    });\n  }\n\n  handleClick(e) {\n    console.log('searching for ' + this.state.city);\n    getVenues(this.state.city).then(vResult => this.setState({\n      venues: vResult,\n      searched: true\n    }));\n    getForecast(this.state.city).then(vResult => this.setState({\n      forecast: vResult\n    }));\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.searched) {\n      console.log(this.state.forecast);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.city, \" \"), React.createElement(RenderVenue, {\n        venues: this.state.venues,\n        forecast: this.state.forecast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Search\"));\n    }\n  }\n\n}\n\n;\n\nclass RenderVenue extends React.Component {\n  timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = hour + ':' + min + ':' + sec;\n    return time;\n  }\n\n  render() {\n    const src = 'https://openweathermap.org/img/wn/' + this.props.forecast.weather[0].icon + '@2x.png';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.forecast.weather[0].main), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Temperature: \", this.props.forecast.main.temp - 273.15, \"C\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sunset \", this.timeConverter(this.props.forecast.sys.sunset)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \", this.props.venues[0].name));\n  }\n\n}\n\n;\nexport default RenderWalk;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Parks and weather/parks.js"],"names":["React","getVenues","getForecast","RenderWalk","Component","constructor","props","state","city","venues","forecast","searched","handleData","bind","handleClick","e","console","log","target","value","searchCity","setState","then","vResult","preventDefault","render","RenderVenue","timeConverter","UNIX_timestamp","a","Date","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","time","src","weather","icon","main","temp","sys","sunset","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {getVenues, getForecast} from './apisearch.js';\n\n\nclass RenderWalk extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            city : 'Malta',\n            venues : [],\n            forecast : {},\n            searched: false\n      };\n      this.handleData=this.handleData.bind(this);\n      this.handleClick=this.handleClick.bind(this);\n      }\n      handleData(e){\n        console.log(e.target.value);\n        const searchCity = e.target.value;\n        this.setState({\n            city: searchCity\n        });\n      }\n      handleClick(e){ \n        console.log('searching for ' + this.state.city);\n        \n        getVenues(this.state.city).then(vResult =>\n       this.setState({\n           venues : vResult,\n          searched: true  \n             }));\n        getForecast(this.state.city).then(vResult =>\n            this.setState({\n                forecast : vResult\n                  }));\n        e.preventDefault();\n           \n      }\n    render(){\n\n        if(this.state.searched) {\n            console.log(this.state.forecast);\n            return <div> \n                <h3>{this.state.city} </h3>\n                <RenderVenue venues={this.state.venues} forecast = {this.state.forecast}/>\n            </div>\n        } else {\n            return <div>\n            <input onChange={this.handleData} />\n            <button onClick={this.handleClick}>Search</button>\n            </div>\n    }}\n\n};\n\n\nclass RenderVenue extends React.Component{\n    timeConverter(UNIX_timestamp){\n        var a = new Date(UNIX_timestamp * 1000);\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n        var year = a.getFullYear();\n        var month = months[a.getMonth()];\n        var date = a.getDate();\n        var hour = a.getHours();\n        var min = a.getMinutes();\n        var sec = a.getSeconds();\n        var time = hour + ':' + min + ':' + sec ;\n        return time;\n      }\n        \nrender(){\n    const src = 'https://openweathermap.org/img/wn/'+this.props.forecast.weather[0].icon+'@2x.png';\n    \n    return <div>\n       <img src={src} />\n       <p>{this.props.forecast.weather[0].main}</p>\n       <p>Temperature: {this.props.forecast.main.temp- 273.15}C</p>\n       <p>Sunset {this.timeConverter(this.props.forecast.sys.sunset)}</p>\n       <p> {this.props.venues[0].name}</p>\n      \n       \n    </div>\n}\n};\nexport default RenderWalk;\n"]},"metadata":{},"sourceType":"module"}