{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js\";\nimport React from 'react';\nlet questions = [{\n  title: 'Do you like warm and fuzzy pets?',\n  display: true,\n  type: \"radio\",\n  name: \"fuzzy\",\n  id: 1,\n  options: [{\n    idAndValue: 'fuzzy',\n    label: \"Yes\"\n  }, {\n    idAndValue: 'nofuz',\n    label: \"No\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 2,\n  options: [{\n    idAndValue: 'dog',\n    label: \"Dog\"\n  }, {\n    idAndValue: 'hamster',\n    label: \"Hamster\"\n  }, {\n    idAndValue: 'cat',\n    label: \"Cat\"\n  }]\n}, {\n  title: 'What kind?',\n  display: false,\n  type: \"radio\",\n  name: \"pet\",\n  id: 3,\n  options: [{\n    idAndValue: 'pig',\n    label: \"Pig\"\n  }, {\n    idAndValue: 'lizard',\n    label: \"Lizard\"\n  }, {\n    idAndValue: 'snake',\n    label: \"Snake\"\n  }]\n}, {\n  title: 'What is your name?',\n  display: false,\n  type: 'text',\n  name: 'name',\n  id: 4,\n  options: [{\n    idAndValue: 'name',\n    label: \"Name\"\n  }]\n}, {\n  title: 'What is your email?',\n  display: false,\n  type: 'text',\n  name: 'email',\n  id: 5,\n  options: [{\n    idAndValue: 'emal',\n    label: \"Email\"\n  }]\n}];\n\nclass RenderQuestionOption extends React.Component {\n  render() {\n    let option = this.props.option;\n    let question = this.props.question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: question.id,\n      onClick: this.props.onClick,\n      type: question.type,\n      id: option.idAndValue,\n      name: question.name,\n      value: option.idAndValue,\n      onClick: this.changeQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      onClick: this.props.onClick,\n      for: option.idAndValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, option.label));\n  }\n\n}\n\n;\n\nclass RenderOptions extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.options.options.map(option => React.createElement(RenderQuestionOption, {\n      onClick: this.props.handleClick,\n      question: this.props.options,\n      option: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nclass RenderQuestion extends React.Component {\n  render() {\n    if (this.props.question.id === this.props.number) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.props.question.title), React.createElement(RenderOptions, {\n        handleClick: this.props.handleClick,\n        options: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\n;\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeQuestion = () => {\n      let qn = this.state.question + 1;\n      this.setState({\n        question: qn\n      });\n      console.log(qn);\n    };\n\n    this.state = {\n      fur: true,\n      question: 1,\n      pet: \"dog\",\n      email: \"tranqvilier@gmail.com\",\n      name: \"Sol\"\n    }; //this.changeQuestion = this.changeQuestion.bind(this);\n    //this.changeFur = this.changeFur.bind(this);\n    //this.changePet = this.changePet.bind(this);\n    //this.changeMail = this.changeMail.bind(this);\n    //this.changeName = this.changeName.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"http://server1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, questions.map(question => React.createElement(RenderQuestion, {\n      onClick: this.changeQuestion,\n      number: this.state.question,\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), \" \");\n  }\n\n}\n\n;\nexport default Test;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/Test/test.js"],"names":["React","questions","title","display","type","name","id","options","idAndValue","label","RenderQuestionOption","Component","render","option","props","question","onClick","changeQuestion","RenderOptions","map","handleClick","RenderQuestion","number","Test","constructor","qn","state","setState","console","log","fur","pet","email"],"mappings":"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","sourcesContent":["import React from 'react';\n\nlet questions = [\n    { title : 'Do you like warm and fuzzy pets?',\n     display: true,\n     type: \"radio\",\n     name: \"fuzzy\",\n     id: 1,\n     options: [{\n         idAndValue: 'fuzzy',\n         label: \"Yes\"\n     }, {\n         idAndValue: 'nofuz',\n         label: \"No\"\n     }]},\n     {title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 2,\n     options: [{\n         idAndValue: 'dog',\n         label: \"Dog\"\n     }, {\n         idAndValue: 'hamster',\n         label: \"Hamster\"\n     }, \n     {\n         idAndValue: 'cat',\n         label: \"Cat\"\n     }]},{\n     title : 'What kind?',\n     display: false,\n     type: \"radio\",\n     name: \"pet\",\n     id: 3,\n     options: [{\n         idAndValue: 'pig',\n         label: \"Pig\"\n     }, {\n         idAndValue: 'lizard',\n         label: \"Lizard\"\n     }, \n     {\n         idAndValue: 'snake',\n         label: \"Snake\"\n     }]},\n     {\n         title: 'What is your name?',\n         display: false,\n         type: 'text',\n         name: 'name',\n         id: 4,\n         options: [{\n         idAndValue: 'name',\n         label: \"Name\"\n         }]\n     },\n     {\n         title: 'What is your email?',\n         display: false,\n         type: 'text',\n         name: 'email',\n         id: 5,\n         options: [{\n         idAndValue: 'emal',\n         label: \"Email\"\n         }]\n     }\n ];\n\n class RenderQuestionOption extends React.Component {\n     render (){\n         let option = this.props.option;\n         let question = this.props.question;\n        return (<div>\n          <input key = {question.id} onClick = {this.props.onClick} type={question.type} id={option.idAndValue} name={question.name} value={option.idAndValue} onClick = {this.changeQuestion} />\n         <label onClick = {this.props.onClick} for={option.idAndValue}>{option.label}</label> \n        </div>)\n     }\n };\n\n class RenderOptions extends React.Component {\n    render () {\n        return (<div> \n            {this.props.options.options.map(option => <RenderQuestionOption onClick = {this.props.handleClick} question = {this.props.options} option = {option}/>)}\n            </div>\n            )\n    \n    }\n };\n class RenderQuestion extends React.Component {\n    render (){\n        if (this.props.question.id === this.props.number){\n        return (<div>\n        <p>{this.props.question.title}</p>\n            <RenderOptions handleClick = {this.props.handleClick} options = {this.props.question}/>\n            </div>\n            )} else {\n                return <div></div>\n            }\n        \n      }\n        \n};\n\n\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          fur: true,\n          question: 1,\n          pet: \"dog\",\n          email: \"tranqvilier@gmail.com\",\n          name: \"Sol\"\n      };\n        //this.changeQuestion = this.changeQuestion.bind(this);\n        //this.changeFur = this.changeFur.bind(this);\n        //this.changePet = this.changePet.bind(this);\n        //this.changeMail = this.changeMail.bind(this);\n        //this.changeName = this.changeName.bind(this);\n      }\n      \n      changeQuestion = () => {\n        let qn = this.state.question + 1;\n        this.setState({question: qn});\n        console.log(qn);\n  };\n    \n    render(){\n        return (<div>\n        <form method=\"post\" action=\"http://server1\">\n            {questions.map(question =>  <RenderQuestion onClick = {this.changeQuestion} number = {this.state.question} question = {question}/>)}\n            <br/>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form> </div>);\n    }\n};\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}