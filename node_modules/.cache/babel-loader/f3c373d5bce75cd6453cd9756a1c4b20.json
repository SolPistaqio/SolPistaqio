{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/game/grid.js\";\nimport React from 'react';\nimport './game.css';\nconst bad = ['0x1F354', '0x1F35F', '0x1F355', '0x1F96E', '0x1F361', '0x1F366', '0x1F369', '0x1F36A', '0x1F9C1', '0x1F36C'];\nconst good = ['0x1F957', '0x1F966', '0x1F96C', '0x1F952', '0x1F955', '0x1F346', '0x1F951', '0x1F345', '0x1F363', '0x1F360'];\nconst location = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\nfunction getItemsNeeded(level) {\n  // console.log('the level is ' + level)\n  const start = 4;\n  let neededItems = 5;\n\n  if (level < 6) {\n    neededItems = start + level;\n  } else if (level < 8) {\n    neededItems = level + 2;\n  } else if (level < 10) {\n    neededItems = level - 3;\n  } else {\n    return 9;\n  } // console.log('we will have '+neededItems+ ' items this round');\n\n\n  return neededItems;\n}\n\nfunction getNumberOfBad(level) {\n  if (level < 6) {\n    return level + 2;\n  } else if (level < 8) {\n    return level - 2;\n  } else {\n    return Math.floor(Math.random() * Math.floor(4)) + 1;\n  }\n}\n\nfunction getRandomRange(itemsNeeded, max) {\n  let range = [];\n\n  while (range.length < itemsNeeded) {\n    const randomNumber = Math.floor(Math.random() * Math.floor(max));\n    if (range.indexOf(randomNumber) === -1) range.push(randomNumber);\n  }\n\n  return range;\n}\n\nclass FoodItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFoodChoise = this.handleFoodChoise.bind(this);\n  }\n\n  handleFoodChoise(e) {\n    // console.log('you made your choice ' + this.props.foodItem.fType)\n    this.props.foodChoise(this.props.foodItem);\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      onClick: this.handleFoodChoise,\n      role: \"image\",\n      className: this.props.locations[this.props.food.indexOf(this.props.foodItem)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, String.fromCodePoint(this.props.foodItem.pic));\n  }\n\n}\n\nclass Gamefield extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRestart = this.handleRestart.bind(this);\n  }\n\n  getfood(itemsNeeded, level) {\n    const badN = getNumberOfBad(level);\n    const goodN = itemsNeeded - badN; // console.log('from '+itemsNeeded+' number of items you get '+goodN+ ' of good and '+badN+ ' of bad')\n\n    let food = []; //get good food\n\n    const goodRange = getRandomRange(goodN, 10);\n    goodRange.forEach(index => food.push({\n      pic: good[index],\n      fType: 'good'\n    })); //add bad food\n\n    const badRange = getRandomRange(badN, 10);\n    badRange.forEach(index => food.push({\n      pic: bad[index],\n      fType: 'bad'\n    })); // console.log(food);\n\n    return food;\n  }\n\n  getLocation(itemsNeeded) {\n    const range = getRandomRange(itemsNeeded, 9);\n    let locations = [];\n    range.forEach(index => {\n      locations.push(location[index]);\n    }); // console.log(locations);\n\n    return locations;\n  }\n\n  handleRestart(e) {\n    this.props.restart();\n  }\n\n  render() {\n    const level = this.props.level;\n    const itemsQ = getItemsNeeded(level);\n    const food = this.getfood(itemsQ, level);\n    const locations = this.getLocation(itemsQ);\n    const affection = Math.abs(this.props.affection);\n\n    if (level < 10 && affection < 3) {\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, food.map(foodItem => {\n        return React.createElement(FoodItem, {\n          foodChoise: this.props.foodChoise,\n          key: foodItem.pic,\n          food: food,\n          locations: locations,\n          foodItem: foodItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      }));\n    } else if (affection >= 3) {\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Spinat is not going to be your friend\"), React.createElement(\"button\", {\n        onClick: this.handleRestart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Try again\"));\n    } else if (level >= 10 && this.props.affection === -1 || this.props.affection === -2) {\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Spinat is your friend FOREVER!\"), React.createElement(\"button\", {\n        onClick: this.handleRestart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Try again\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Spinat is not going to be your friend\"), React.createElement(\"button\", {\n        onClick: this.handleRestart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Try again\"));\n    }\n  }\n\n}\n\nexport default Gamefield;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react/Sol/portrolio/portfolio/src/components/game/grid.js"],"names":["React","bad","good","location","getItemsNeeded","level","start","neededItems","getNumberOfBad","Math","floor","random","getRandomRange","itemsNeeded","max","range","length","randomNumber","indexOf","push","FoodItem","Component","constructor","props","handleFoodChoise","bind","e","foodChoise","foodItem","render","locations","food","String","fromCodePoint","pic","Gamefield","handleRestart","getfood","badN","goodN","goodRange","forEach","index","fType","badRange","getLocation","restart","itemsQ","affection","abs","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './game.css'\n\nconst bad = ['0x1F354','0x1F35F','0x1F355','0x1F96E','0x1F361','0x1F366','0x1F369','0x1F36A','0x1F9C1','0x1F36C'];\nconst good = ['0x1F957','0x1F966','0x1F96C','0x1F952','0x1F955','0x1F346','0x1F951','0x1F345','0x1F363','0x1F360'];\nconst location = ['one', 'two','three','four','five','six','seven','eight','nine']\n\n\nfunction getItemsNeeded(level) {\n   // console.log('the level is ' + level)\n    const start = 4;\n    let neededItems = 5;\n    if (level<6){\n        neededItems = start + level;\n    } else if (level<8){\n        neededItems = level + 2\n    } else if (level<10) {\n        neededItems = level - 3\n    } else {\n        return 9\n    }\n   // console.log('we will have '+neededItems+ ' items this round');\n    return neededItems\n    \n}\n\nfunction getNumberOfBad (level){\n    if (level<6){\n        return level + 2\n    } else if (level<8) {\n        return level - 2\n    } else {\n        return Math.floor(Math.random() * Math.floor(4)) + 1\n    }\n}\n\nfunction getRandomRange (itemsNeeded, max){\n    let range = [];\n    while(range.length<itemsNeeded) {\n    const randomNumber = Math.floor(Math.random() * Math.floor(max));\n    if(range.indexOf(randomNumber) === -1) range.push(randomNumber);\n    }\n    return range\n}\n\nclass FoodItem extends React.Component{\n    constructor(props) {\n        super(props);\nthis.handleFoodChoise=this.handleFoodChoise.bind(this); \n      }\n\n    handleFoodChoise(e){\n       // console.log('you made your choice ' + this.props.foodItem.fType)\n        this.props.foodChoise(this.props.foodItem)\n\n        \n    }\nrender(){\n    return (<span  onClick={this.handleFoodChoise} role=\"image\"  className={this.props.locations[this.props.food.indexOf(this.props.foodItem)]}>{String.fromCodePoint(this.props.foodItem.pic)}</span>)\n}\n}\n\n\nclass Gamefield extends React.Component{\n\n    constructor(props) {\n        super(props);\nthis.handleRestart=this.handleRestart.bind(this); \n      }\n    \n    getfood(itemsNeeded, level) {\n        const badN = getNumberOfBad(level);\n        const goodN = itemsNeeded - badN;\n       // console.log('from '+itemsNeeded+' number of items you get '+goodN+ ' of good and '+badN+ ' of bad')\n\n        let food = [];\n        //get good food\n        const goodRange = getRandomRange(goodN, 10);\n        goodRange.forEach(index=>\n            food.push(\n                {pic: good[index],\n                fType: 'good'}\n                )\n            )\n        \n        //add bad food\n        const badRange = getRandomRange(badN, 10);\n        badRange.forEach(index=>\n            food.push(\n                {pic: bad[index],\n                fType: 'bad'}\n                )\n            )\n       // console.log(food);\n        return food\n        \n    }\n\n    getLocation (itemsNeeded){\n        const range = getRandomRange(itemsNeeded, 9);\n        let locations = [];\n        range.forEach(index=> {\n            locations.push(location[index])\n        })\n       // console.log(locations);\n        return locations\n    }\n\n    handleRestart(e){\n        this.props.restart()\n    }\n    \n    render(){\n        const level = this.props.level;\n        const itemsQ = getItemsNeeded(level);\n        const food = this.getfood(itemsQ, level);\n        const locations = this.getLocation(itemsQ);\n        const affection = Math.abs(this.props.affection);\n\n        if (level <10 && affection < 3){\n        return  (<div className='grid'>\n            {food.map(foodItem => {\n                \n                return <FoodItem foodChoise={this.props.foodChoise} key ={foodItem.pic} food={food} locations={locations} foodItem={foodItem}/>\n                \n            })}\n\n        </div>)}\n        else if(affection>=3) {\n            return (<div className='grid' >\n            <h2>Spinat is not going to be your friend</h2>\n            <button onClick={this.handleRestart}>Try again</button>\n            </div>)\n        } else if (level>= 10 && this.props.affection === -1 ||this.props.affection === -2) {\n            return (<div className='grid' >\n                <h2>Spinat is your friend FOREVER!</h2>\n                <button onClick={this.handleRestart}>Try again</button>\n                </div>) \n        }\n        else {\n            return (<div className='grid' >\n                <h2>Spinat is not going to be your friend</h2>\n                <button onClick={this.handleRestart}>Try again</button>\n                </div>)\n        }\n    }\n}\n\nexport default Gamefield;\n\n\n\n"]},"metadata":{},"sourceType":"module"}